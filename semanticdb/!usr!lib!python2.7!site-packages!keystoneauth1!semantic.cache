;; Object keystoneauth1/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "keystoneauth1/"
  :tables (list 
   (semanticdb-table "session.py"
    :major-mode 'python-mode
    :tags 
        '( ("datetime" include nil nil [547 562])
            ("functools" include nil nil [563 579])
            ("hashlib" include nil nil [580 594])
            ("json" include nil nil [595 606])
            ("logging" include nil nil [607 621])
            ("os" include nil nil [622 631])
            ("platform" include nil nil [632 647])
            ("socket" include nil nil [648 661])
            ("sys" include nil nil [662 672])
            ("time" include nil nil [673 684])
            ("uuid" include nil nil [685 696])
            ("requests" include nil nil [698 713])
            ("six" include nil nil [714 724])
            ("six.moves" include nil nil [725 753])
            ("keystoneauth1" include nil nil [755 775])
            ("keystoneauth1" include nil nil [776 817])
            ("keystoneauth1" include nil nil [818 852])
            ("keystoneauth1" include nil nil [853 889])
            ("try" code nil nil [891 954])
            ("try" code nil nil [955 1050])
            ("DEFAULT_USER_AGENT" code nil nil [1051 1236])
            ("_LOG_CONTENT_TYPES" variable nil nil [1443 1489])
            ("_logger" variable nil nil [1491 1527])
            ("_construct_session" function (:arguments 
              ( ("session_obj" variable nil (reparse-symbol function_parameters) [1553 1564]))              ) nil [1530 1994])
            ("_mv_legacy_headers_for_service" function
               (:documentation "Workaround for services that predate standardization.

    TODO(sdague): eventually convert this to using os-service-types
    and put the logic there. However, right now this is so little
    logic, inlining it for release is a better call.

    "
                :arguments 
                  ( ("mv_service_type" variable nil (reparse-symbol function_parameters) [2031 2046]))                  )
                nil [1996 2533])
            ("_JSONEncoder" type
               (:superclasses ("json.JSONEncoder")
                :members 
                  ( ("default" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2590 2594])
                            ("o" variable nil (reparse-symbol function_parameters) [2596 2597]))                          )
                        (reparse-symbol indented_block_body) [2578 2897]))                  
                :type "class")
                nil [2535 2897])
            ("_StringFormatter" type
               (:documentation "A String formatter that fetches values on demand."
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3039 3061])
                            ("self" variable nil (reparse-symbol indented_block_body) [3070 3086]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3009 3013])
                            ("session" variable nil (reparse-symbol function_parameters) [3015 3022])
                            ("auth" variable nil (reparse-symbol function_parameters) [3024 3028]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2996 3087])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3108 3112])
                            ("item" variable nil (reparse-symbol function_parameters) [3114 3118]))                          )
                        (reparse-symbol indented_block_body) [3092 3544]))                  
                :type "class")
                nil [2899 3544])
            ("_determine_calling_package" function (:documentation "Walk the call frames trying to identify what is using this module.") nil [3546 5229])
            ("_determine_user_agent" function (:documentation "Attempt to programatically generate a user agent string.

    First, look at the name of the process. Return this unless it is in
    the `ignored` list.  Otherwise, look at the function call stack and
    try to find the name of the code that invoked this module.
    ") nil [5231 6027])
            ("Session" type
               (:documentation "Maintains client communication state and common functionality.

    As much as possible the parameters to this class reflect and are passed
    directly to the :mod:`requests` library.

    :param auth: An authentication plugin to authenticate the session with.
                 (optional, defaults to None)
    :type auth: keystoneauth1.plugin.BaseAuthPlugin
    :param requests.Session session: A requests session object that can be used
                                     for issuing requests. (optional)
    :param str original_ip: The original IP of the requesting user which will
                            be sent to identity service in a 'Forwarded'
                            header. (optional)
    :param verify: The verification arguments to pass to requests. These are of
                   the same form as requests expects, so True or False to
                   verify (or not) against system certificates or a path to a
                   bundle or CA certs to check against or None for requests to
                   attempt to locate and use certificates. (optional, defaults
                   to True)
    :param cert: A client certificate to pass to requests. These are of the
                 same form as requests expects. Either a single filename
                 containing both the certificate and key or a tuple containing
                 the path to the certificate then a path to the key. (optional)
    :param float timeout: A timeout to pass to requests. This should be a
                          numerical value indicating some amount (or fraction)
                          of seconds or 0 for no timeout. (optional, defaults
                          to 0)
    :param str user_agent: A User-Agent header string to use for the request.
                           If not provided, a default of
                           :attr:`~keystoneauth1.session.DEFAULT_USER_AGENT` is
                           used, which contains the keystoneauth1 version as
                           well as those of the requests library and which
                           Python is being used. When a non-None value is
                           passed, it will be prepended to the default.
    :param int/bool redirect: Controls the maximum number of redirections that
                              can be followed by a request. Either an integer
                              for a specific count or True/False for
                              forever/never. (optional, default to 30)
    :param dict additional_headers: Additional headers that should be attached
                                    to every request passing through the
                                    session. Headers of the same name specified
                                    per request will take priority.
    :param str app_name: The name of the application that is creating the
                         session. This will be used to create the user_agent.
    :param str app_version: The version of the application creating the
                            session. This will be used to create the
                            user_agent.
    :param list additional_user_agent: A list of tuple of name, version that
                                       will be added to the user agent. This
                                       can be used by libraries that are part
                                       of the communication process.
    :param dict discovery_cache: A dict to be used for caching of discovery
                                 information. This is normally managed
                                 transparently, but if the user wants to
                                 share a single cache across multiple sessions
                                 that do not share an auth plugin, it can
                                 be provided here. (optional, defaults to
                                 None which means automatically manage)
    "
                :superclasses ("object")
                :members 
                  ( ("user_agent" variable nil (reparse-symbol indented_block_body) [10032 10049])
                    ("_REDIRECT_STATUSES" variable nil (reparse-symbol indented_block_body) [10055 10106])
                    ("_DEFAULT_REDIRECT_LIMIT" variable nil (reparse-symbol indented_block_body) [10112 10140])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [10483 10499])
                            ("self" variable nil (reparse-symbol indented_block_body) [10508 10550])
                            ("self" variable nil (reparse-symbol indented_block_body) [10559 10589])
                            ("self" variable nil (reparse-symbol indented_block_body) [10598 10618])
                            ("self" variable nil (reparse-symbol indented_block_body) [10627 10643])
                            ("self" variable nil (reparse-symbol indented_block_body) [10652 10671])
                            ("self" variable nil (reparse-symbol indented_block_body) [10680 10704])
                            ("self" code nil (reparse-symbol indented_block_body) [10713 10763])
                            ("self" variable nil (reparse-symbol indented_block_body) [10772 10796])
                            ("self" variable nil (reparse-symbol indented_block_body) [10805 10835])
                            ("self" code nil (reparse-symbol indented_block_body) [10844 10900])
                            ("self" variable nil (reparse-symbol indented_block_body) [10909 10943])
                            ("if" code nil (reparse-symbol indented_block_body) [10952 11013])
                            ("self" variable nil (reparse-symbol indented_block_body) [11021 11060])
                            ("if" code nil (reparse-symbol indented_block_body) [11070 11136])
                            ("if" code nil (reparse-symbol indented_block_body) [11145 11245])
                            ("self" variable nil (reparse-symbol indented_block_body) [11254 11281]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10159 10163])
                            ("auth" variable nil (reparse-symbol function_parameters) [10165 10169])
                            ("session" variable nil (reparse-symbol function_parameters) [10176 10183])
                            ("original_ip" variable nil (reparse-symbol function_parameters) [10190 10201])
                            ("verify" variable nil (reparse-symbol function_parameters) [10208 10214])
                            ("cert" variable nil (reparse-symbol function_parameters) [10238 10242])
                            ("timeout" variable nil (reparse-symbol function_parameters) [10249 10256])
                            ("user_agent" variable nil (reparse-symbol function_parameters) [10263 10273])
                            ("redirect" variable nil (reparse-symbol function_parameters) [10297 10305])
                            ("additional_headers" variable nil (reparse-symbol function_parameters) [10331 10349])
                            ("app_name" variable nil (reparse-symbol function_parameters) [10373 10381])
                            ("app_version" variable nil (reparse-symbol function_parameters) [10388 10399])
                            ("additional_user_agent" variable nil (reparse-symbol function_parameters) [10406 10427])
                            ("discovery_cache" variable nil (reparse-symbol function_parameters) [10451 10466]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [10146 11282])
                    ("adapters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11314 11318]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [11287 11358])
                    ("adapters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11397 11401])
                            ("value" variable nil (reparse-symbol function_parameters) [11403 11408]))                          
                        :decorators 
                          ( ("adapters.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [11363 11449])
                    ("mount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11464 11468])
                            ("scheme" variable nil (reparse-symbol function_parameters) [11470 11476])
                            ("adapter" variable nil (reparse-symbol function_parameters) [11478 11485]))                          )
                        (reparse-symbol indented_block_body) [11454 11532])
                    ("_remove_service_catalog" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11565 11569])
                            ("body" variable nil (reparse-symbol function_parameters) [11571 11575]))                          )
                        (reparse-symbol indented_block_body) [11537 12127])
                    ("_process_header" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("header" variable nil (reparse-symbol function_parameters) [12170 12176]))                          
                        :documentation "Redact the secure headers to be logged.")
                        (reparse-symbol indented_block_body) [12132 12633])
                    ("_http_log_request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12660 12664])
                            ("url" variable nil (reparse-symbol function_parameters) [12666 12669])
                            ("method" variable nil (reparse-symbol function_parameters) [12671 12677])
                            ("data" variable nil (reparse-symbol function_parameters) [12684 12688])
                            ("json" variable nil (reparse-symbol function_parameters) [12721 12725])
                            ("headers" variable nil (reparse-symbol function_parameters) [12732 12739])
                            ("query_params" variable nil (reparse-symbol function_parameters) [12746 12758])
                            ("logger" variable nil (reparse-symbol function_parameters) [12791 12797]))                          )
                        (reparse-symbol indented_block_body) [12638 14513])
                    ("_http_log_response" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14541 14545])
                            ("response" variable nil (reparse-symbol function_parameters) [14547 14555])
                            ("json" variable nil (reparse-symbol function_parameters) [14562 14566])
                            ("status_code" variable nil (reparse-symbol function_parameters) [14600 14611])
                            ("headers" variable nil (reparse-symbol function_parameters) [14618 14625])
                            ("text" variable nil (reparse-symbol function_parameters) [14632 14636])
                            ("logger" variable nil (reparse-symbol function_parameters) [14670 14676]))                          )
                        (reparse-symbol indented_block_body) [14518 16666])
                    ("_set_microversion_headers" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("headers" variable nil (reparse-symbol function_parameters) [16732 16739])
                            ("microversion" variable nil (reparse-symbol function_parameters) [16741 16753])
                            ("service_type" variable nil (reparse-symbol function_parameters) [16755 16767])
                            ("endpoint_filter" variable nil (reparse-symbol function_parameters) [16769 16784]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [16671 18989])
                    ("request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19006 19010])
                            ("url" variable nil (reparse-symbol function_parameters) [19012 19015])
                            ("method" variable nil (reparse-symbol function_parameters) [19017 19023])
                            ("json" variable nil (reparse-symbol function_parameters) [19025 19029])
                            ("original_ip" variable nil (reparse-symbol function_parameters) [19036 19047])
                            ("user_agent" variable nil (reparse-symbol function_parameters) [19070 19080])
                            ("redirect" variable nil (reparse-symbol function_parameters) [19087 19095])
                            ("authenticated" variable nil (reparse-symbol function_parameters) [19102 19115])
                            ("endpoint_filter" variable nil (reparse-symbol function_parameters) [19138 19153])
                            ("auth" variable nil (reparse-symbol function_parameters) [19160 19164])
                            ("requests_auth" variable nil (reparse-symbol function_parameters) [19171 19184])
                            ("raise_exc" variable nil (reparse-symbol function_parameters) [19207 19216])
                            ("allow_reauth" variable nil (reparse-symbol function_parameters) [19223 19235])
                            ("log" variable nil (reparse-symbol function_parameters) [19242 19245])
                            ("endpoint_override" variable nil (reparse-symbol function_parameters) [19268 19285])
                            ("connect_retries" variable nil (reparse-symbol function_parameters) [19292 19307])
                            ("logger" variable nil (reparse-symbol function_parameters) [19311 19317])
                            ("allow" variable nil (reparse-symbol function_parameters) [19343 19348])
                            ("client_name" variable nil (reparse-symbol function_parameters) [19355 19366])
                            ("client_version" variable nil (reparse-symbol function_parameters) [19373 19387])
                            ("microversion" variable nil (reparse-symbol function_parameters) [19410 19422])
                            ("microversion_service_type" variable nil (reparse-symbol function_parameters) [19429 19454])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [19477 19485]))                          
                        :documentation "Send an HTTP request with the specified characteristics.

        Wrapper around `requests.Session.request` to handle tasks such as
        setting headers, JSON encoding/decoding, and error handling.

        Arguments that are not handled are passed through to the requests
        library.

        :param str url: Path or fully qualified URL of HTTP request. If only a
                        path is provided then endpoint_filter must also be
                        provided such that the base URL can be determined. If a
                        fully qualified URL is provided then endpoint_filter
                        will be ignored.
        :param str method: The http method to use. (e.g. 'GET', 'POST')
        :param str original_ip: Mark this request as forwarded for this ip.
                                (optional)
        :param dict headers: Headers to be included in the request. (optional)
        :param json: Some data to be represented as JSON. (optional)
        :param str user_agent: A user_agent to use for the request. If present
                               will override one present in headers. (optional)
        :param int/bool redirect: the maximum number of redirections that
                                  can be followed by a request. Either an
                                  integer for a specific count or True/False
                                  for forever/never. (optional)
        :param int connect_retries: the maximum number of retries that should
                                    be attempted for connection errors.
                                    (optional, defaults to 0 - never retry).
        :param bool authenticated: True if a token should be attached to this
                                   request, False if not or None for attach if
                                   an auth_plugin is available.
                                   (optional, defaults to None)
        :param dict endpoint_filter: Data to be provided to an auth plugin with
                                     which it should be able to determine an
                                     endpoint to use for this request. If not
                                     provided then URL is expected to be a
                                     fully qualified URL. (optional)
        :param str endpoint_override: The URL to use instead of looking up the
                                      endpoint in the auth plugin. This will be
                                      ignored if a fully qualified URL is
                                      provided but take priority over an
                                      endpoint_filter. This string may contain
                                      the values ``%(project_id)s`` and
                                      ``%(user_id)s`` to have those values
                                      replaced by the project_id/user_id of the
                                      current authentication. (optional)
        :param auth: The auth plugin to use when authenticating this request.
                     This will override the plugin that is attached to the
                     session (if any). (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin
        :param requests_auth: A requests library auth plugin that cannot be
                              passed via kwarg because the `auth` kwarg
                              collides with our own auth plugins. (optional)
        :type requests_auth: :py:class:`requests.auth.AuthBase`
        :param bool raise_exc: If True then raise an appropriate exception for
                               failed HTTP requests. If False then return the
                               request object. (optional, default True)
        :param bool allow_reauth: Allow fetching a new token and retrying the
                                  request on receiving a 401 Unauthorized
                                  response. (optional, default True)
        :param bool log: If True then log the request and response data to the
                         debug log. (optional, default True)
        :param logger: The logger object to use to log request and responses.
                       If not provided the keystoneauth1.session default
                       logger will be used.
        :type logger: logging.Logger
        :param dict allow: Extra filters to pass when discovering API
                           versions. (optional)
        :param microversion: Microversion to send for this request.
                       microversion can be given as a string or a tuple.
                       (optional)
        :param str microversion_service_type: The service_type to be sent in
                       the microversion header, if a microversion is given.
                       Defaults to the value of service_type from
                       endpoint_filter if one exists. If endpoint_filter is not
                       provided or does not have a service_type, microversion
                       is given and microversion_service_type is not provided,
                       an exception will be raised.
        :param kwargs: any other parameter that can be passed to
                       :meth:`requests.Session.request` (such as `headers`).
                       Except:

                       - `data` will be overwritten by the data in the `json`
                         param.
                       - `allow_redirects` is ignored as redirects are handled
                         by the session.

        :raises keystoneauth1.exceptions.base.ClientException: For connection
            failure, or to indicate an error response code.

        :returns: The response to the request.
        ")
                        (reparse-symbol indented_block_body) [18994 32591])
                    ("_send_request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32614 32618])
                            ("url" variable nil (reparse-symbol function_parameters) [32620 32623])
                            ("method" variable nil (reparse-symbol function_parameters) [32625 32631])
                            ("redirect" variable nil (reparse-symbol function_parameters) [32633 32641])
                            ("log" variable nil (reparse-symbol function_parameters) [32643 32646])
                            ("logger" variable nil (reparse-symbol function_parameters) [32648 32654])
                            ("connect_retries" variable nil (reparse-symbol function_parameters) [32678 32693])
                            ("connect_retry_delay" variable nil (reparse-symbol function_parameters) [32695 32714])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [32720 32728]))                          )
                        (reparse-symbol indented_block_body) [32596 36524])
                    ("head" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36538 36542])
                            ("url" variable nil (reparse-symbol function_parameters) [36544 36547])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [36549 36557]))                          
                        :documentation "Perform a HEAD request.

        This calls :py:meth:`.request()` with ``method`` set to ``HEAD``.

        ")
                        (reparse-symbol indented_block_body) [36529 36734])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36747 36751])
                            ("url" variable nil (reparse-symbol function_parameters) [36753 36756])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [36758 36766]))                          
                        :documentation "Perform a GET request.

        This calls :py:meth:`.request()` with ``method`` set to ``GET``.

        ")
                        (reparse-symbol indented_block_body) [36739 36940])
                    ("post" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36954 36958])
                            ("url" variable nil (reparse-symbol function_parameters) [36960 36963])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [36965 36973]))                          
                        :documentation "Perform a POST request.

        This calls :py:meth:`.request()` with ``method`` set to ``POST``.

        ")
                        (reparse-symbol indented_block_body) [36945 37150])
                    ("put" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37163 37167])
                            ("url" variable nil (reparse-symbol function_parameters) [37169 37172])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [37174 37182]))                          
                        :documentation "Perform a PUT request.

        This calls :py:meth:`.request()` with ``method`` set to ``PUT``.

        ")
                        (reparse-symbol indented_block_body) [37155 37356])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37372 37376])
                            ("url" variable nil (reparse-symbol function_parameters) [37378 37381])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [37383 37391]))                          
                        :documentation "Perform a DELETE request.

        This calls :py:meth:`.request()` with ``method`` set to ``DELETE``.

        ")
                        (reparse-symbol indented_block_body) [37361 37574])
                    ("patch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37589 37593])
                            ("url" variable nil (reparse-symbol function_parameters) [37595 37598])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [37600 37608]))                          
                        :documentation "Perform a PATCH request.

        This calls :py:meth:`.request()` with ``method`` set to ``PATCH``.

        ")
                        (reparse-symbol indented_block_body) [37579 37788])
                    ("_auth_required" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37812 37816])
                            ("auth" variable nil (reparse-symbol function_parameters) [37818 37822])
                            ("msg" variable nil (reparse-symbol function_parameters) [37824 37827]))                          )
                        (reparse-symbol indented_block_body) [37793 38042])
                    ("get_auth_headers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38068 38072])
                            ("auth" variable nil (reparse-symbol function_parameters) [38074 38078])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [38085 38093]))                          
                        :documentation "Return auth headers as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin
                     on the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth.AuthorizationFailure:
            if a new token fetch fails.
        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.

        :returns: Authentication headers or None for failure.
        :rtype: :class:`dict`
        ")
                        (reparse-symbol indented_block_body) [38047 38775])
                    ("get_token" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38794 38798])
                            ("auth" variable nil (reparse-symbol function_parameters) [38800 38804]))                          
                        :documentation "Return a token as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin
                     on the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth.AuthorizationFailure:
             if a new token fetch fails.
        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.

        .. warning::
            **DEPRECATED**: This assumes that the only header that is used to
            authenticate a message is ``X-Auth-Token``. This may not be
            correct. Use :meth:`get_auth_headers` instead.

        :returns: A valid token.
        :rtype: string
        ")
                        (reparse-symbol indented_block_body) [38780 39647])
                    ("get_endpoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39669 39673])
                            ("auth" variable nil (reparse-symbol function_parameters) [39675 39679])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [39686 39694]))                          
                        :documentation "Get an endpoint as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin on
                     the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.

        :returns: An endpoint if available or None.
        :rtype: string
        ")
                        (reparse-symbol indented_block_body) [39652 40348])
                    ("get_endpoint_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40375 40379])
                            ("auth" variable nil (reparse-symbol function_parameters) [40381 40385])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [40392 40400]))                          
                        :documentation "Get endpoint data as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin on
                     the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.
        :raises TypeError: If arguments are invalid

        :returns: Endpoint data if available or None.
        :rtype: keystoneauth1.discover.EndpointData
        ")
                        (reparse-symbol indented_block_body) [40353 41053])
                    ("get_api_major_version" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41084 41088])
                            ("auth" variable nil (reparse-symbol function_parameters) [41090 41094])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [41101 41109]))                          
                        :documentation "Get the major API version as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin on
                     the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin: if a
            plugin is not available.

        :return: The major version of the API of the service discovered.
        :rtype: tuple or None
        ")
                        (reparse-symbol indented_block_body) [41058 41719])
                    ("get_auth_connection_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41755 41759])
                            ("auth" variable nil (reparse-symbol function_parameters) [41761 41765])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [41772 41780]))                          
                        :documentation "Return auth connection params as provided by the auth plugin.

        An auth plugin may specify connection parameters to the request like
        providing a client certificate for communication.

        We restrict the values that may be returned from this function to
        prevent an auth plugin overriding values unrelated to connection
        parmeters. The values that are currently accepted are:

        - `cert`: a path to a client certificate, or tuple of client
          certificate and key pair that are used with this request.
        - `verify`: a boolean value to indicate verifying SSL certificates
          against the system CAs or a path to a CA file to verify with.

        These values are passed to the requests library and further information
        on accepted values may be found there.

        :param auth: The auth plugin to use for tokens. Overrides the plugin
                     on the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth.AuthorizationFailure:
            if a new token fetch fails.
        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.
        :raises keystoneauth1.exceptions.auth_plugins.UnsupportedParameters:
            if the plugin returns a parameter that is not supported by this
            session.

        :returns: Authentication headers or None for failure.
        :rtype: :class:`dict`
        ")
                        (reparse-symbol indented_block_body) [41724 44025])
                    ("invalidate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44045 44049])
                            ("auth" variable nil (reparse-symbol function_parameters) [44051 44055]))                          
                        :documentation "Invalidate an authentication plugin.

        :param auth: The auth plugin to invalidate. Overrides the plugin on the
                     session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        ")
                        (reparse-symbol indented_block_body) [44030 44388])
                    ("get_user_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44409 44413])
                            ("auth" variable nil (reparse-symbol function_parameters) [44415 44419]))                          
                        :documentation "Return the authenticated user_id as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin
                     on the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth.AuthorizationFailure:
            if a new token fetch fails.
        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.

        :returns: Current user_id or None if not supported by plugin.
        :rtype: :class:`str`
        ")
                        (reparse-symbol indented_block_body) [44393 45114])
                    ("get_project_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45138 45142])
                            ("auth" variable nil (reparse-symbol function_parameters) [45144 45148]))                          
                        :documentation "Return the authenticated project_id as provided by the auth plugin.

        :param auth: The auth plugin to use for token. Overrides the plugin
                     on the session. (optional)
        :type auth: keystoneauth1.plugin.BaseAuthPlugin

        :raises keystoneauth1.exceptions.auth.AuthorizationFailure:
            if a new token fetch fails.
        :raises keystoneauth1.exceptions.auth_plugins.MissingAuthPlugin:
            if a plugin is not available.

        :returns: Current project_id or None if not supported by plugin.
        :rtype: :class:`str`
        ")
                        (reparse-symbol indented_block_body) [45119 45855]))                  
                :type "class")
                nil [6029 45855])
            ("REQUESTS_VERSION" variable nil nil [45857 45930])
            ("TCPKeepAliveAdapter" type
               (:documentation "The custom adapter used to set TCP Keep-Alive on all connections.

    This Adapter also preserves the default behaviour of Requests which
    disables Nagle's Algorithm. See also:
    https://blogs.msdn.com/b/windowsazurestorage/archive/2010/06/25/nagle-s-algorithm-is-not-friendly-towards-small-requests.aspx
    "
                :superclasses ("requests.adapters.HTTPAdapter")
                :members 
                  ( ("init_poolmanager" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46343 46347])
                            ("args" variable nil (reparse-symbol function_parameters) [46349 46354])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [46356 46364]))                          )
                        (reparse-symbol indented_block_body) [46322 48019]))                  
                :type "class")
                nil [45933 48019]))          
    :file "session.py"
    :pointmax 48019
    :fsize 48018
    :lastmodtime '(23145 23311 663517 0)
    :unmatched-syntax '((INDENT_BLOCK 34763 . 35232) (NEWLINE 34762 . 34763) (COLON 34761 . 34762) (TRY 33420 . 33423) (AS 34757 . 34759) (INDENT_BLOCK 34523 . 34703) (NEWLINE 34522 . 34523) (COLON 34521 . 34522) (AS 34517 . 34519) (EXCEPT 34473 . 34479) (INDENT_BLOCK 34332 . 34461) (NEWLINE 33944 . 33945) (COLON 33943 . 33944) (AS 33939 . 33941) (EXCEPT 33896 . 33902) (INDENT_BLOCK 33777 . 33884) (NEWLINE 33776 . 33777) (COLON 33775 . 33776) (EXCEPT 33741 . 33747) (INDENT_BLOCK 33563 . 33729) (NEWLINE 33562 . 33563) (COLON 33561 . 33562) (TRY 33437 . 33440) (AS 33557 . 33559))
    )
   )
  :file "!usr!lib!python2.7!site-packages!keystoneauth1!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
