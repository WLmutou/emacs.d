;; Object requests/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "requests/"
  :tables (list 
   (semanticdb-table "__init__.py"
    :major-mode 'python-mode
    :tags nil
    :file "__init__.py"
    :pointmax 3508
    :fsize 2197
    :lastmodtime '(22803 7654 0 0)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "sessions.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
requests.session
~~~~~~~~~~~~~~~~

This module provides a Session object to manage and persist settings across
requests (cookies, auth, proxies).
\"\"\"" code nil nil [26 179])
            ("os" include nil nil [180 189])
            ("platform" include nil nil [190 205])
            ("time" include nil nil [206 217])
            ("collections" include nil nil [218 249])
            ("datetime" include nil nil [250 280])
            ("_basic_auth_str" include nil nil [293 315])
            ("cookielib" include nil nil [329 385])
            ("is_py3" include nil nil [329 385])
            ("OrderedDict" include nil nil [329 385])
            ("urljoin" include nil nil [329 385])
            ("urlparse" include nil nil [329 385])
            ("" code nil nil [407 491])
            ("Request" include nil nil [505 560])
            ("PreparedRequest" include nil nil [505 560])
            ("DEFAULT_REDIRECT_LIMIT" include nil nil [505 560])
            ("default_hooks" include nil nil [573 608])
            ("dispatch_hook" include nil nil [573 608])
            ("to_native_string" include nil nil [631 654])
            ("to_key_val_list" include nil nil [667 706])
            ("default_headers" include nil nil [667 706])
            ("" code nil nil [731 813])
            ("RecentlyUsedContainer" include nil nil [850 878])
            ("CaseInsensitiveDict" include nil nil [896 922])
            ("HTTPAdapter" include nil nil [939 957])
            ("" code nil nil [978 1093])
            ("codes" include nil nil [1114 1126])
            ("REDIRECT_STATI" include nil nil [1208 1229])
            ("REDIRECT_CACHE_SIZE" variable nil nil [1231 1257])
            ("if" code nil nil [1333 1564])
            ("merge_setting" function
               (:documentation "Determines appropriate setting for a given request, taking into account
    the explicit setting on that request, and the setting in the session. If a
    setting is a dictionary, they will be merged together using `dict_class`
    "
                :arguments 
                  ( ("request_setting" variable nil (reparse-symbol function_parameters) [1584 1599])
                    ("session_setting" variable nil (reparse-symbol function_parameters) [1601 1616])
                    ("dict_class" variable nil (reparse-symbol function_parameters) [1618 1628]))                  )
                nil [1566 2614])
            ("merge_hooks" function
               (:documentation "Properly merges both requests and session hooks.

    This is necessary because when request_hooks == {'response': []}, the
    merge breaks Session hooks entirely.
    "
                :arguments 
                  ( ("request_hooks" variable nil (reparse-symbol function_parameters) [2632 2645])
                    ("session_hooks" variable nil (reparse-symbol function_parameters) [2647 2660])
                    ("dict_class" variable nil (reparse-symbol function_parameters) [2662 2672]))                  )
                nil [2616 3132])
            ("SessionRedirectMixin" type
               (:superclasses ("object")
                :members 
                  ( ("get_redirect_target" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3199 3203])
                            ("resp" variable nil (reparse-symbol function_parameters) [3205 3209]))                          
                        :documentation "Receives a Response. Returns a redirect URI or ``None``")
                        (reparse-symbol indented_block_body) [3175 3944])
                    ("resolve_redirects" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3971 3975])
                            ("resp" variable nil (reparse-symbol function_parameters) [3977 3981])
                            ("req" variable nil (reparse-symbol function_parameters) [3983 3986])
                            ("stream" variable nil (reparse-symbol function_parameters) [3988 3994])
                            ("timeout" variable nil (reparse-symbol function_parameters) [4002 4009])
                            ("verify" variable nil (reparse-symbol function_parameters) [4042 4048])
                            ("cert" variable nil (reparse-symbol function_parameters) [4055 4059])
                            ("proxies" variable nil (reparse-symbol function_parameters) [4066 4073])
                            ("adapter_kwargs" variable nil (reparse-symbol function_parameters) [4080 4096]))                          
                        :documentation "Receives a Response. Returns a generator of Responses.")
                        (reparse-symbol indented_block_body) [3949 8409])
                    ("rebuild_auth" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8431 8435])
                            ("prepared_request" variable nil (reparse-symbol function_parameters) [8437 8453])
                            ("response" variable nil (reparse-symbol function_parameters) [8455 8463]))                          
                        :documentation "When being redirected we may want to strip authentication from the
        request to avoid leaking credentials. This method intelligently removes
        and reapplies authentication where possible to avoid credential loss.
        ")
                        (reparse-symbol indented_block_body) [8414 9397])
                    ("rebuild_proxies" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9422 9426])
                            ("prepared_request" variable nil (reparse-symbol function_parameters) [9428 9444])
                            ("proxies" variable nil (reparse-symbol function_parameters) [9446 9453]))                          
                        :documentation "This method re-evaluates the proxy configuration by considering the
        environment variables. If we are redirected to a URL covered by
        NO_PROXY, we strip the proxy configuration. Otherwise, we set missing
        proxy keys for this URL (in case they were stripped by a previous
        redirect).

        This method also replaces the Proxy-Authorization header where
        necessary.

        :rtype: dict
        ")
                        (reparse-symbol indented_block_body) [9402 10894])
                    ("rebuild_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10918 10922])
                            ("prepared_request" variable nil (reparse-symbol function_parameters) [10924 10940])
                            ("response" variable nil (reparse-symbol function_parameters) [10942 10950]))                          
                        :documentation "When being redirected we may want to change the method of the request
        based on certain specs or browser behavior.
        ")
                        (reparse-symbol indented_block_body) [10899 11766]))                  
                :type "class")
                nil [3134 11766])
            ("Session" type
               (:documentation "A Requests session.

    Provides cookie persistence, connection-pooling, and configuration.

    Basic Usage::

      >>> import requests
      >>> s = requests.Session()
      >>> s.get('http://httpbin.org/get')
      <Response [200]>

    Or as a context manager::

      >>> with requests.Session() as s:
      >>>     s.get('http://httpbin.org/get')
      <Response [200]>
    "
                :superclasses ("SessionRedirectMixin")
                :members 
                  ( ("__attrs__" variable nil (reparse-symbol indented_block_body) [12203 12388])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [12586 12618])
                            ("self" variable nil (reparse-symbol indented_block_body) [12730 12746])
                            ("self" variable nil (reparse-symbol indented_block_body) [12977 12994])
                            ("self" variable nil (reparse-symbol indented_block_body) [13037 13065])
                            ("self" variable nil (reparse-symbol indented_block_body) [13267 13283])
                            ("self" variable nil (reparse-symbol indented_block_body) [13337 13356])
                            ("self" variable nil (reparse-symbol indented_block_body) [13403 13421])
                            ("self" variable nil (reparse-symbol indented_block_body) [13565 13581])
                            ("self" variable nil (reparse-symbol indented_block_body) [13826 13869])
                            ("self" variable nil (reparse-symbol indented_block_body) [13989 14010])
                            ("self" variable nil (reparse-symbol indented_block_body) [14290 14328])
                            ("self" variable nil (reparse-symbol indented_block_body) [14377 14406])
                            ("self" code nil (reparse-symbol indented_block_body) [14415 14452])
                            ("self" code nil (reparse-symbol indented_block_body) [14461 14497])
                            ("self" variable nil (reparse-symbol indented_block_body) [14576 14640]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12407 12411]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [12394 14641])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14660 14664]))                          )
                        (reparse-symbol indented_block_body) [14646 14687])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14705 14709])
                            ("args" variable nil (reparse-symbol function_parameters) [14711 14716]))                          )
                        (reparse-symbol indented_block_body) [14692 14740])
                    ("prepare_request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14765 14769])
                            ("request" variable nil (reparse-symbol function_parameters) [14771 14778]))                          
                        :documentation "Constructs a :class:`PreparedRequest <PreparedRequest>` for
        transmission and returns it. The :class:`PreparedRequest` has settings
        merged from the :class:`Request <Request>` instance and those of the
        :class:`Session`.

        :param request: :class:`Request` instance to prepare with this
            session's settings.
        :rtype: requests.PreparedRequest
        ")
                        (reparse-symbol indented_block_body) [14745 16274])
                    ("request" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16291 16295])
                            ("method" variable nil (reparse-symbol function_parameters) [16297 16303])
                            ("url" variable nil (reparse-symbol function_parameters) [16305 16308])
                            ("params" variable nil (reparse-symbol function_parameters) [16318 16324])
                            ("data" variable nil (reparse-symbol function_parameters) [16339 16343])
                            ("headers" variable nil (reparse-symbol function_parameters) [16358 16365])
                            ("cookies" variable nil (reparse-symbol function_parameters) [16380 16387])
                            ("files" variable nil (reparse-symbol function_parameters) [16402 16407])
                            ("auth" variable nil (reparse-symbol function_parameters) [16422 16426])
                            ("timeout" variable nil (reparse-symbol function_parameters) [16441 16448])
                            ("allow_redirects" variable nil (reparse-symbol function_parameters) [16463 16478])
                            ("proxies" variable nil (reparse-symbol function_parameters) [16493 16500])
                            ("hooks" variable nil (reparse-symbol function_parameters) [16515 16520])
                            ("stream" variable nil (reparse-symbol function_parameters) [16535 16541])
                            ("verify" variable nil (reparse-symbol function_parameters) [16556 16562])
                            ("cert" variable nil (reparse-symbol function_parameters) [16577 16581])
                            ("json" variable nil (reparse-symbol function_parameters) [16596 16600]))                          
                        :documentation "Constructs a :class:`Request <Request>`, prepares it and sends it.
        Returns :class:`Response <Response>` object.

        :param method: method for the new :class:`Request` object.
        :param url: URL for the new :class:`Request` object.
        :param params: (optional) Dictionary or bytes to be sent in the query
            string for the :class:`Request`.
        :param data: (optional) Dictionary, bytes, or file-like object to send
            in the body of the :class:`Request`.
        :param json: (optional) json to send in the body of the
            :class:`Request`.
        :param headers: (optional) Dictionary of HTTP Headers to send with the
            :class:`Request`.
        :param cookies: (optional) Dict or CookieJar object to send with the
            :class:`Request`.
        :param files: (optional) Dictionary of ``'filename': file-like-objects``
            for multipart encoding upload.
        :param auth: (optional) Auth tuple or callable to enable
            Basic/Digest/Custom HTTP Auth.
        :param timeout: (optional) How long to wait for the server to send
            data before giving up, as a float, or a :ref:`(connect timeout,
            read timeout) <timeouts>` tuple.
        :type timeout: float or tuple
        :param allow_redirects: (optional) Set to True by default.
        :type allow_redirects: bool
        :param proxies: (optional) Dictionary mapping protocol or protocol and
            hostname to the URL of the proxy.
        :param stream: (optional) whether to immediately download the response
            content. Defaults to ``False``.
        :param verify: (optional) Either a boolean, in which case it controls whether we verify
            the server's TLS certificate, or a string, in which case it must be a path
            to a CA bundle to use. Defaults to ``True``.
        :param cert: (optional) if String, path to ssl client cert file (.pem).
            If Tuple, ('cert', 'key') pair.
        :rtype: requests.Response
        ")
                        (reparse-symbol indented_block_body) [16279 19447])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19460 19464])
                            ("url" variable nil (reparse-symbol function_parameters) [19466 19469])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [19471 19479]))                          )
                        (reparse-symbol indented_block_body) [19452 19829])
                    ("options" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19846 19850])
                            ("url" variable nil (reparse-symbol function_parameters) [19852 19855])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [19857 19865]))                          )
                        (reparse-symbol indented_block_body) [19834 20223])
                    ("head" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20237 20241])
                            ("url" variable nil (reparse-symbol function_parameters) [20243 20246])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [20248 20256]))                          )
                        (reparse-symbol indented_block_body) [20228 20609])
                    ("post" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20623 20627])
                            ("url" variable nil (reparse-symbol function_parameters) [20629 20632])
                            ("data" variable nil (reparse-symbol function_parameters) [20634 20638])
                            ("json" variable nil (reparse-symbol function_parameters) [20645 20649])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [20656 20664]))                          )
                        (reparse-symbol indented_block_body) [20614 21185])
                    ("put" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21198 21202])
                            ("url" variable nil (reparse-symbol function_parameters) [21204 21207])
                            ("data" variable nil (reparse-symbol function_parameters) [21209 21213])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [21220 21228]))                          )
                        (reparse-symbol indented_block_body) [21190 21654])
                    ("patch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21669 21673])
                            ("url" variable nil (reparse-symbol function_parameters) [21675 21678])
                            ("data" variable nil (reparse-symbol function_parameters) [21680 21684])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [21691 21699]))                          )
                        (reparse-symbol indented_block_body) [21659 22130])
                    ("delete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22146 22150])
                            ("url" variable nil (reparse-symbol function_parameters) [22152 22155])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [22157 22165]))                          )
                        (reparse-symbol indented_block_body) [22135 22470])
                    ("send" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22484 22488])
                            ("request" variable nil (reparse-symbol function_parameters) [22490 22497])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [22499 22507]))                          
                        :documentation "
        Send a given PreparedRequest.

        :rtype: requests.Response
        ")
                        (reparse-symbol indented_block_body) [22475 25132])
                    ("merge_environment_settings" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25168 25172])
                            ("url" variable nil (reparse-symbol function_parameters) [25174 25177])
                            ("proxies" variable nil (reparse-symbol function_parameters) [25179 25186])
                            ("stream" variable nil (reparse-symbol function_parameters) [25188 25194])
                            ("verify" variable nil (reparse-symbol function_parameters) [25196 25202])
                            ("cert" variable nil (reparse-symbol function_parameters) [25204 25208]))                          
                        :documentation "
        Check the environment and merge it with some settings.

        :rtype: dict
        ")
                        (reparse-symbol indented_block_body) [25137 26301])
                    ("get_adapter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26322 26326])
                            ("url" variable nil (reparse-symbol function_parameters) [26328 26331]))                          
                        :documentation "
        Returns the appropriate connection adapter for the given URL.

        :rtype: requests.adapters.BaseAdapter
        ")
                        (reparse-symbol indented_block_body) [26306 26721])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26736 26740]))                          
                        :documentation "Closes all adapters and as such the session")
                        (reparse-symbol indented_block_body) [26726 26864])
                    ("mount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26879 26883])
                            ("prefix" variable nil (reparse-symbol function_parameters) [26885 26891])
                            ("adapter" variable nil (reparse-symbol function_parameters) [26893 26900]))                          
                        :documentation "Registers a connection adapter to a prefix.

        Adapters are sorted in descending order by key length.
        ")
                        (reparse-symbol indented_block_body) [26869 27238])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27260 27264]))                          )
                        (reparse-symbol indented_block_body) [27243 27431])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27453 27457])
                            ("state" variable nil (reparse-symbol function_parameters) [27459 27464]))                          )
                        (reparse-symbol indented_block_body) [27436 27778]))                  
                :type "class")
                nil [11768 27778])
            ("session" function (:documentation "
    Returns a :class:`Session` for context-management.

    :rtype: Session
    ") nil [27780 27909]))          
    :file "sessions.py"
    :pointmax 27909
    :fsize 27908
    :lastmodtime '(22803 7654 0 0)
    :unmatched-syntax '((NAME 25457 . 25465) (IF 25492 . 25494) (ELSE 25515 . 25519) (NAME 24737 . 24744) (IF 24770 . 24772) (ELSE 24789 . 24793) (NAME 9911 . 9918) (IF 9929 . 9931) (ELSE 9952 . 9956) (NAME 9237 . 9245) (IF 9268 . 9270) (ELSE 9286 . 9290) (FROM 1195 . 1199) (PERIOD 1200 . 1201) (FROM 1095 . 1099) (PERIOD 1100 . 1101) (FROM 959 . 963) (PERIOD 964 . 965) (FROM 924 . 928) (PERIOD 929 . 930) (FROM 879 . 883) (PERIOD 884 . 885) (FROM 814 . 818) (PERIOD 819 . 820) (FROM 707 . 711) (PERIOD 712 . 713) (FROM 655 . 659) (PERIOD 660 . 661) (FROM 609 . 613) (PERIOD 614 . 615) (FROM 561 . 565) (PERIOD 566 . 567) (FROM 492 . 496) (PERIOD 497 . 498) (FROM 386 . 390) (PERIOD 391 . 392) (FROM 316 . 320) (PERIOD 321 . 322) (FROM 282 . 286) (PERIOD 287 . 288))
    )
   (semanticdb-table "models.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\"
requests.models
~~~~~~~~~~~~~~~

This module contains the primary objects that power Requests.
\"\"\"" code nil nil [26 128])
            ("collections" include nil nil [130 148])
            ("datetime" include nil nil [149 164])
            ("sys" include nil nil [165 175])
            ("encodings.idna" include nil nil [410 431])
            ("io" include nil nil [433 468])
            ("default_hooks" include nil nil [481 501])
            ("CaseInsensitiveDict" include nil nil [519 545])
            ("HTTPBasicAuth" include nil nil [558 578])
            ("cookiejar_from_dict" include nil nil [593 656])
            ("get_cookie_header" include nil nil [593 656])
            ("_copy_cookie_jar" include nil nil [593 656])
            ("RequestField" include nil nil [687 706])
            ("encode_multipart_formdata" include nil nil [739 771])
            ("parse_url" include nil nil [800 816])
            ("" code nil nil [858 929])
            ("" code nil nil [954 1083])
            ("to_native_string" include nil nil [1106 1147])
            ("unicode_is_ascii" include nil nil [1106 1147])
            ("" code nil nil [1167 1360])
            ("" code nil nil [1381 1488])
            ("json" include nil nil [1502 1528])
            ("codes" include nil nil [1548 1560])
            ("REDIRECT_STATI" variable nil nil [1650 1855])
            ("DEFAULT_REDIRECT_LIMIT" variable nil nil [1857 1884])
            ("CONTENT_CHUNK_SIZE" code nil nil [1885 1915])
            ("ITER_CHUNK_SIZE" variable nil nil [1916 1937])
            ("RequestEncodingMixin" type
               (:superclasses ("object")
                :members 
                  ( ("path_url" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2007 2011]))                          
                        :documentation "Build the path URL to use.")
                        (reparse-symbol indented_block_body) [1980 2328])
                    ("_encode_params" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("data" variable nil (reparse-symbol function_parameters) [2370 2374]))                          
                        :documentation "Encode parameters in a piece of data.

        Will successfully encode parameters when passed as a dict or a list of
        2-tuples. Order is retained if data is a list of 2-tuples but arbitrary
        if parameters are supplied as a dict.
        ")
                        (reparse-symbol indented_block_body) [2333 3340])
                    ("_encode_files" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("files" variable nil (reparse-symbol function_parameters) [3381 3386])
                            ("data" variable nil (reparse-symbol function_parameters) [3388 3392]))                          
                        :documentation "Build the body for a multipart/form-data request.

        Will successfully encode files when passed as a dict or a list of
        tuples. Order is retained if data is a list of tuples but arbitrary
        if parameters are supplied as a dict.
        The tuples may be 2-tuples (filename, fileobj), 3-tuples (filename, fileobj, contentype)
        or 4-tuples (filename, fileobj, contentype, custom_headers).
        ")
                        (reparse-symbol indented_block_body) [3345 5530]))                  
                :type "class")
                nil [1940 5530])
            ("RequestHooksMixin" type
               (:superclasses ("object")
                :members 
                  ( ("register_hook" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5587 5591])
                            ("event" variable nil (reparse-symbol function_parameters) [5593 5598])
                            ("hook" variable nil (reparse-symbol function_parameters) [5600 5604]))                          
                        :documentation "Properly register a hook.")
                        (reparse-symbol indented_block_body) [5569 6004])
                    ("deregister_hook" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6029 6033])
                            ("event" variable nil (reparse-symbol function_parameters) [6035 6040])
                            ("hook" variable nil (reparse-symbol function_parameters) [6042 6046]))                          
                        :documentation "Deregister a previously registered hook.
        Returns True if the hook existed, False if not.
        ")
                        (reparse-symbol indented_block_body) [6009 6302]))                  
                :type "class")
                nil [5532 6302])
            ("Request" type
               (:documentation "A user-created :class:`Request <Request>` object.

    Used to prepare a :class:`PreparedRequest <PreparedRequest>`, which is sent to the server.

    :param method: HTTP method to use.
    :param url: URL to send.
    :param headers: dictionary of headers to send.
    :param files: dictionary of {filename: fileobject} files to multipart upload.
    :param data: the body to attach to the request. If a dictionary is provided, form-encoding will take place.
    :param json: json for the body to attach to the request (if files or data is not specified).
    :param params: dictionary of URL parameters to append to the URL.
    :param auth: Auth handler or (user, pass) tuple.
    :param cookies: dictionary or CookieJar of cookies to attach to this request.
    :param hooks: dictionary of callback hooks, for internal usage.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'http://httpbin.org/get')
      >>> req.prepare()
      <PreparedRequest [GET]>
    "
                :superclasses ("RequestHooksMixin")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("data" code nil (reparse-symbol indented_block_body) [7584 7588])
                            ("files" code nil (reparse-symbol indented_block_body) [7630 7635])
                            ("headers" code nil (reparse-symbol indented_block_body) [7681 7688])
                            ("params" code nil (reparse-symbol indented_block_body) [7732 7738])
                            ("hooks" code nil (reparse-symbol indented_block_body) [7780 7785])
                            ("self" variable nil (reparse-symbol indented_block_body) [7795 7823])
                            ("for" code nil (reparse-symbol indented_block_body) [7832 7915])
                            ("self" variable nil (reparse-symbol indented_block_body) [7924 7944])
                            ("self" variable nil (reparse-symbol indented_block_body) [7953 7967])
                            ("self" variable nil (reparse-symbol indented_block_body) [7976 7998])
                            ("self" variable nil (reparse-symbol indented_block_body) [8007 8025])
                            ("self" variable nil (reparse-symbol indented_block_body) [8034 8050])
                            ("self" variable nil (reparse-symbol indented_block_body) [8059 8075])
                            ("self" variable nil (reparse-symbol indented_block_body) [8084 8104])
                            ("self" variable nil (reparse-symbol indented_block_body) [8113 8129])
                            ("self" variable nil (reparse-symbol indented_block_body) [8138 8160]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7361 7365])
                            ("method" variable nil (reparse-symbol function_parameters) [7367 7373])
                            ("url" variable nil (reparse-symbol function_parameters) [7380 7383])
                            ("headers" variable nil (reparse-symbol function_parameters) [7390 7397])
                            ("files" variable nil (reparse-symbol function_parameters) [7404 7409])
                            ("data" variable nil (reparse-symbol function_parameters) [7424 7428])
                            ("params" variable nil (reparse-symbol function_parameters) [7435 7441])
                            ("auth" variable nil (reparse-symbol function_parameters) [7448 7452])
                            ("cookies" variable nil (reparse-symbol function_parameters) [7459 7466])
                            ("hooks" variable nil (reparse-symbol function_parameters) [7473 7478])
                            ("json" variable nil (reparse-symbol function_parameters) [7485 7489]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7348 8161])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8179 8183]))                          )
                        (reparse-symbol indented_block_body) [8166 8234])
                    ("prepare" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8251 8255]))                          
                        :documentation "Constructs a :class:`PreparedRequest <PreparedRequest>` for transmission and returns it.")
                        (reparse-symbol indented_block_body) [8239 8739]))                  
                :type "class")
                nil [6304 8739])
            ("PreparedRequest" type
               (:documentation "The fully mutable :class:`PreparedRequest <PreparedRequest>` object,
    containing the exact bytes that will be sent to the server.

    Generated from either a :class:`Request <Request>` object or manually.

    Usage::

      >>> import requests
      >>> req = requests.Request('GET', 'http://httpbin.org/get')
      >>> r = req.prepare()
      <PreparedRequest [GET]>

      >>> s = requests.Session()
      >>> s.send(r)
      <Response [200]>
    "
                :superclasses ("RequestEncodingMixin" "RequestHooksMixin")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [9347 9365])
                            ("self" variable nil (reparse-symbol indented_block_body) [9418 9433])
                            ("self" variable nil (reparse-symbol indented_block_body) [9481 9500])
                            ("self" variable nil (reparse-symbol indented_block_body) [9630 9650])
                            ("self" variable nil (reparse-symbol indented_block_body) [9706 9722])
                            ("self" variable nil (reparse-symbol indented_block_body) [9792 9820])
                            ("self" variable nil (reparse-symbol indented_block_body) [9905 9931]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9288 9292]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9275 9932])
                    ("prepare" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9949 9953])
                            ("method" variable nil (reparse-symbol function_parameters) [9955 9961])
                            ("url" variable nil (reparse-symbol function_parameters) [9968 9971])
                            ("headers" variable nil (reparse-symbol function_parameters) [9978 9985])
                            ("files" variable nil (reparse-symbol function_parameters) [9992 9997])
                            ("data" variable nil (reparse-symbol function_parameters) [10012 10016])
                            ("params" variable nil (reparse-symbol function_parameters) [10023 10029])
                            ("auth" variable nil (reparse-symbol function_parameters) [10036 10040])
                            ("cookies" variable nil (reparse-symbol function_parameters) [10047 10054])
                            ("hooks" variable nil (reparse-symbol function_parameters) [10061 10066])
                            ("json" variable nil (reparse-symbol function_parameters) [10073 10077]))                          
                        :documentation "Prepares the entire request with the given parameters.")
                        (reparse-symbol indented_block_body) [9937 10638])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10656 10660]))                          )
                        (reparse-symbol indented_block_body) [10643 10719])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10733 10737]))                          )
                        (reparse-symbol indented_block_body) [10724 11077])
                    ("prepare_method" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11101 11105])
                            ("method" variable nil (reparse-symbol function_parameters) [11107 11113]))                          
                        :documentation "Prepares the given HTTP method.")
                        (reparse-symbol indented_block_body) [11082 11291])
                    ("_get_idna_encoded_host" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("host" variable nil (reparse-symbol function_parameters) [11341 11345]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [11296 11821])
                    ("prepare_url" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11842 11846])
                            ("url" variable nil (reparse-symbol function_parameters) [11848 11851])
                            ("params" variable nil (reparse-symbol function_parameters) [11853 11859]))                          
                        :documentation "Prepares the given HTTP URL.")
                        (reparse-symbol indented_block_body) [11826 15026])
                    ("prepare_headers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15051 15055])
                            ("headers" variable nil (reparse-symbol function_parameters) [15057 15064]))                          
                        :documentation "Prepares the given HTTP headers.")
                        (reparse-symbol indented_block_body) [15031 15426])
                    ("prepare_body" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15448 15452])
                            ("data" variable nil (reparse-symbol function_parameters) [15454 15458])
                            ("files" variable nil (reparse-symbol function_parameters) [15460 15465])
                            ("json" variable nil (reparse-symbol function_parameters) [15467 15471]))                          
                        :documentation "Prepares the given HTTP body data.")
                        (reparse-symbol indented_block_body) [15431 17984])
                    ("prepare_content_length" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18016 18020])
                            ("body" variable nil (reparse-symbol function_parameters) [18022 18026]))                          
                        :documentation "Prepare Content-Length header based on request method and body")
                        (reparse-symbol indented_block_body) [17989 18656])
                    ("prepare_auth" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18678 18682])
                            ("auth" variable nil (reparse-symbol function_parameters) [18684 18688])
                            ("url" variable nil (reparse-symbol function_parameters) [18690 18693]))                          
                        :documentation "Prepares the given HTTP auth data.")
                        (reparse-symbol indented_block_body) [18661 19390])
                    ("prepare_cookies" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19415 19419])
                            ("cookies" variable nil (reparse-symbol function_parameters) [19421 19428]))                          
                        :documentation "Prepares the given HTTP cookie data.

        This function eventually generates a ``Cookie`` header from the
        given cookies using cookielib. Due to cookielib's design, the header
        will not be regenerated if it already exists, meaning this function
        can only be called once for the life of the
        :class:`PreparedRequest <PreparedRequest>` object. Any subsequent calls
        to ``prepare_cookies`` will have no actual effect, unless the \"Cookie\"
        header is removed beforehand.
        ")
                        (reparse-symbol indented_block_body) [19395 20279])
                    ("prepare_hooks" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20302 20306])
                            ("hooks" variable nil (reparse-symbol function_parameters) [20308 20313]))                          
                        :documentation "Prepares the given hooks.")
                        (reparse-symbol indented_block_body) [20284 20641]))                  
                :type "class")
                nil [8741 20641])
            ("Response" type
               (:documentation "The :class:`Response <Response>` object, which contains a
    server's response to an HTTP request.
    "
                :superclasses ("object")
                :members 
                  ( ("__attrs__" variable nil (reparse-symbol indented_block_body) [20787 20932])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [20966 20998])
                            ("self" variable nil (reparse-symbol indented_block_body) [21008 21029])
                            ("self" variable nil (reparse-symbol indented_block_body) [21038 21068])
                            ("self" variable nil (reparse-symbol indented_block_body) [21145 21168])
                            ("self" variable nil (reparse-symbol indented_block_body) [21372 21408])
                            ("self" variable nil (reparse-symbol indented_block_body) [21648 21663])
                            ("self" variable nil (reparse-symbol indented_block_body) [21716 21731])
                            ("self" variable nil (reparse-symbol indented_block_body) [21799 21819])
                            ("self" variable nil (reparse-symbol indented_block_body) [22046 22063])
                            ("self" variable nil (reparse-symbol indented_block_body) [22151 22169])
                            ("self" variable nil (reparse-symbol indented_block_body) [22235 22273])
                            ("self" variable nil (reparse-symbol indented_block_body) [22696 22732])
                            ("self" variable nil (reparse-symbol indented_block_body) [22847 22866]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20951 20955]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [20938 22867])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22889 22893]))                          )
                        (reparse-symbol indented_block_body) [22872 23193])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23215 23219])
                            ("state" variable nil (reparse-symbol function_parameters) [23221 23226]))                          )
                        (reparse-symbol indented_block_body) [23198 23438])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23456 23460]))                          )
                        (reparse-symbol indented_block_body) [23443 23517])
                    ("__bool__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23535 23539]))                          
                        :documentation "Returns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        ")
                        (reparse-symbol indented_block_body) [23522 23943])
                    ("__nonzero__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23964 23968]))                          
                        :documentation "Returns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        ")
                        (reparse-symbol indented_block_body) [23948 24372])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24390 24394]))                          
                        :documentation "Allows you to use a response as an iterator.")
                        (reparse-symbol indented_block_body) [24377 24494])
                    ("ok" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24520 24524]))                          
                        :documentation "Returns True if :attr:`status_code` is less than 400.

        This attribute checks if the status code of the response is between
        400 and 600 to see if there was a client error or a server error. If
        the status code, is between 200 and 400, this will return True. This
        is **not** a check to see if the response code is ``200 OK``.
        ")
                        (reparse-symbol indented_block_body) [24499 25025])
                    ("is_redirect" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25060 25064]))                          
                        :documentation "True if this Response is a well-formed HTTP redirect that could have
        been processed automatically (by :meth:`Session.resolve_redirects`).
        ")
                        (reparse-symbol indented_block_body) [25030 25319])
                    ("is_permanent_redirect" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25364 25368]))                          
                        :documentation "True if this Response one of the permanent versions of redirect")
                        (reparse-symbol indented_block_body) [25324 25569])
                    ("apparent_encoding" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25610 25614]))                          
                        :documentation "The apparent encoding, provided by the chardet library")
                        (reparse-symbol indented_block_body) [25574 25742])
                    ("iter_content" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25764 25768])
                            ("chunk_size" variable nil (reparse-symbol function_parameters) [25770 25780])
                            ("decode_unicode" variable nil (reparse-symbol function_parameters) [25784 25798]))                          
                        :documentation "Iterates over the response data.  When stream=True is set on the
        request, this avoids reading the content at once into memory for
        large responses.  The chunk size is the number of bytes it should
        read into memory.  This is not necessarily the length of each item
        returned as decoding can take place.

        chunk_size must be of type int or None. A value of None will
        function differently depending on the value of `stream`.
        stream=True will read data as it arrives in whatever size the
        chunks are received. If stream=False, data is returned as
        a single chunk.

        If decode_unicode is True, content will be decoded using the best
        available encoding based on the response.
        ")
                        (reparse-symbol indented_block_body) [25747 28020])
                    ("iter_lines" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28040 28044])
                            ("chunk_size" variable nil (reparse-symbol function_parameters) [28046 28056])
                            ("decode_unicode" variable nil (reparse-symbol function_parameters) [28074 28088])
                            ("delimiter" variable nil (reparse-symbol function_parameters) [28095 28104]))                          
                        :documentation "Iterates over the response data, one line at a time.  When
        stream=True is set on the request, this avoids reading the
        content at once into memory for large responses.

        .. note:: This method is not reentrant safe.
        ")
                        (reparse-symbol indented_block_body) [28025 28986])
                    ("content" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29017 29021]))                          
                        :documentation "Content of the response, in bytes.")
                        (reparse-symbol indented_block_body) [28991 29686])
                    ("text" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29714 29718]))                          
                        :documentation "Content of the response, in unicode.

        If Response.encoding is None, encoding will be guessed using
        ``chardet``.

        The encoding of the response content is determined based solely on HTTP
        headers, following RFC 2616 to the letter. If you can take advantage of
        non-HTTP knowledge to make a better guess at the encoding, you should
        set ``r.encoding`` appropriately before accessing this property.
        ")
                        (reparse-symbol indented_block_body) [29691 30983])
                    ("json" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30997 31001])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [31003 31011]))                          )
                        (reparse-symbol indented_block_body) [30988 32211])
                    ("links" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32240 32244]))                          
                        :documentation "Returns the parsed header links of the response, if any.")
                        (reparse-symbol indented_block_body) [32216 32607])
                    ("raise_for_status" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32633 32637]))                          
                        :documentation "Raises stored :class:`HTTPError`, if one occurred.")
                        (reparse-symbol indented_block_body) [32612 33617])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33632 33636]))                          
                        :documentation "Releases the connection back to the pool. Once this method has been
        called the underlying ``raw`` object must not be accessed again.

        *Note: Should not normally need to be called explicitly.*
        ")
                        (reparse-symbol indented_block_body) [33622 34066]))                  
                :type "class")
                nil [20643 34066]))          
    :file "models.py"
    :pointmax 34066
    :fsize 34065
    :lastmodtime '(22803 7654 0 0)
    :unmatched-syntax
    )
   )
  :file "!usr!lib!python2.7!site-packages!requests!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
