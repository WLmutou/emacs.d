;; Object AutoPurchase_ebay_firefox/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "AutoPurchase_ebay_firefox/"
  :tables
  (list
    (semanticdb-table "autoPurchaseEbay.py"
      :major-mode 'python-mode
      :tags 
        '( ("selenium" include nil nil [40 70])
            ("selenium.webdriver.common.action_chains" include nil nil [71 135])
            ("getpass" include nil nil [136 155])
            ("time" include nil nil [136 155])
            ("sys" include nil nil [156 178])
            ("os" include nil nil [156 178])
            ("platform" include nil nil [156 178])
            ("string" include nil nil [179 192])
            ("tkMessageBox" include nil nil [194 213])
            ("writeEbayLog" include nil nil [215 247])
            ("getUSstate" include nil nil [280 313])
            ("readFileEbay" include nil nil [348 381])
            ("readFileEbay" include nil nil [416 459])
            ("readFileEbay" include nil nil [460 511])
            ("readFileEbay" include nil nil [512 557])
            ("readFileEbay" include nil nil [558 593])
            ("findColor" include nil nil [594 625])
            ("checkAsinSku" include nil nil [659 696])
            ("typecode" variable nil nil [740 778])
            ("reload" code nil nil [779 790])
            ("sys" code nil nil [791 823])
            ("global" code nil nil [859 906])
            ("userEmail" variable nil nil [907 923])
            ("passWord" variable nil nil [949 965])
            ("server_ip" variable nil nil [987 1003])
            ("ebay_user" variable nil nil [1004 1020])
            ("ebay_pass" variable nil nil [1021 1037])
            ("configFileName" variable nil nil [1039 1068])
            ("if" code nil nil [1069 1507])
            ("global" code nil nil [1524 1544])
            ("purchasePrice" variable nil nil [1545 1562])
            ("system_, sysUser" code nil nil [1564 1618])
            ("profilePath" variable nil nil [1619 1635])
            ("if" code nil nil [1636 2360])
            ("if" code nil nil [2376 2436])
            ("if" code nil nil [2437 2542])
            ("profileName, files" code nil nil [2543 2568])
            ("endWith" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [2581 2582])
                ("endstring" variable nil (reparse-symbol function_parameters) [2583 2593]))              ) nil [2569 2692])
            ("if" code nil nil [2746 2999])
            ("messages" variable nil nil [3063 3120])
            ("openBrowser" function (:documentation "首先尝试打开phantomjs,再尝试打开chrome，如果无法打开chrome再打开火狐浏览器 ") nil [3125 4037])
            ("closeBrowser" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4055 4061]))              ) nil [4038 4163])
            ("clickByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4339 4345])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [4347 4358])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [4360 4375]))              ) nil [4324 4661])
            ("clickByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4756 4762])
                ("xpathName" variable nil (reparse-symbol function_parameters) [4764 4773])
                ("xpathNameNode" variable nil (reparse-symbol function_parameters) [4775 4788]))              ) nil [4739 5059])
            ("inputByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [5153 5159])
                ("xpathName" variable nil (reparse-symbol function_parameters) [5161 5170])
                ("inputText" variable nil (reparse-symbol function_parameters) [5172 5181])
                ("xpathNode" variable nil (reparse-symbol function_parameters) [5183 5192]))              ) nil [5136 5546])
            ("inputByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [5646 5652])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [5653 5664])
                ("inputText" variable nil (reparse-symbol function_parameters) [5665 5674])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [5676 5691]))              ) nil [5631 6081])
            ("findElementByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [6181 6187])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [6188 6199])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [6201 6216]))              ) nil [6160 6563])
            ("fElementsByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [6668 6674])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [6675 6686])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [6688 6703]))              ) nil [6649 7056])
            ("findElementByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [7162 7168])
                ("xpathName" variable nil (reparse-symbol function_parameters) [7170 7179])
                ("xpathNameNode" variable nil (reparse-symbol function_parameters) [7181 7194]))              ) nil [7139 7512])
            ("findElementById" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [7612 7618])
                ("idSelector" variable nil (reparse-symbol function_parameters) [7619 7629])
                ("idSelectorNode" variable nil (reparse-symbol function_parameters) [7631 7645]))              ) nil [7592 8001])
            ("clickElement" function (:arguments 
              ( ("webElement" variable nil (reparse-symbol function_parameters) [8097 8107]))              ) nil [8080 8378])
            ("getDigit" function (:arguments 
              ( ("strs" variable nil (reparse-symbol function_parameters) [8401 8405]))              ) nil [8388 8708])
            ("clickSelect" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [8726 8732])
                ("select_id" variable nil (reparse-symbol function_parameters) [8733 8742])
                ("infoName" variable nil (reparse-symbol function_parameters) [8743 8751])
                ("infoDict" variable nil (reparse-symbol function_parameters) [8752 8760]))              ) nil [8710 10365])
            ("is_num" function (:arguments 
              ( ("strs" variable nil (reparse-symbol function_parameters) [10399 10403]))              ) nil [10388 10498])
            ("findGoods" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [10593 10599])
                ("infoDict" variable nil (reparse-symbol function_parameters) [10600 10608]))              ) nil [10579 15953])
            ("clickChangeAddress" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [16057 16063])
                ("changeAddress" variable nil (reparse-symbol function_parameters) [16064 16077]))              ) nil [16034 16923])
            ("changeAddress" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [17017 17023])
                ("infoDict" variable nil (reparse-symbol function_parameters) [17024 17032]))              ) nil [16999 27485])
            ("isExistsFrame" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [27582 27588])
                ("frame_id" variable nil (reparse-symbol function_parameters) [27589 27597])
                ("chAddr" variable nil (reparse-symbol function_parameters) [27599 27605]))              ) nil [27564 27922])
            ("\"\"\"
def clickRecaddr(driver):
    clickRecaddr = False
    try:
        driver.switch_to_default_content()
    except Exception,e: logInfo(\"clickRecaddr switch to default Error,%s\"%e)
    try:
        driver.switch_to_frame(0)
        clickRecaddr(driver)
        clickRecaddr = True
    except Exception,e:
        logInfo(\"click Recaddr switch to frame 0 Error,%s\"%e)
    if not clickRecaddr:
        try:
            driver.switch_to_frame(1)
            clickRecaddr(driver)
            clickRecaddr = True
        except Exception,e:
            logInfo(\"click Recaddr switch to frame 1 Error,%s\"%e)
\"\"\"" code nil nil [27922 28530])
            ("clickRecaddr" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [28549 28555]))              ) nil [28532 28796])
            ("continuePay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [28898 28904]))              ) nil [28882 30049])
            ("payOnlyThis" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [30134 30140]))              ) nil [30118 30919])
            ("addMessage" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [31021 31027]))              ) nil [31006 32797])
            ("iframePay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [32890 32896]))              ) nil [32876 35565])
            ("confirmAndPay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [35684 35690]))              ) nil [35666 36473])
            ("selectPay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [36558 36564])
                ("userName" variable nil (reparse-symbol function_parameters) [36565 36573])
                ("passWord" variable nil (reparse-symbol function_parameters) [36574 36582]))              ) nil [36544 41859])
            ("move_to_element" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [41880 41886])
                ("selector" variable nil (reparse-symbol function_parameters) [41888 41896]))              ) nil [41860 42061])
            ("continueAbovefold" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [42141 42147]))              ) nil [42119 42618])
            ("loginEbay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [42733 42739])
                ("ebay_user" variable nil (reparse-symbol function_parameters) [42740 42749])
                ("ebay_pass" variable nil (reparse-symbol function_parameters) [42750 42759]))              ) nil [42719 45172])
            ("submitLogin" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [45189 45195]))              ) nil [45173 48061])
            ("judgeSuccessError" function
               (:documentation "
    purchaseHistory_url = \"http://www.ebay.com/myb/PurchaseHistory\"
    driver.get(purchaseHistory_url)
    cur_url = driver.current_url
    time_start = time.time()
    while True:
        if cur_url == purchaseHistory_url: break
        time.sleep(3)
        cur_url = driver.current_url
        time_end = time.time()
        if abs(time_end - time_start) > 60: break  #如果一分钟还没有跳转,则继续

    item_div_css = \"div.order-r.my-row-r.item-list-all\"
    
    item_title_css = \"a.vip.item-title\"
    purchase_success = False    
    items,item_title, history_1_url = [],\"\",\"\"
    items = fElementsByCss(driver,item_div_css)
    if items: item_div = items[0]
    if item_div:item_title = findElementByCss(driver,item_title_css,item_div)
    if item_title:
        history_1_url = item_title.get_attribute(\"href\")
        logInfo(\"href: %s\"%history_1_url)
    if history_1_url:
        infoDict_url , url_order_id= \"\",\"\"
        try: infoDict_url = infoDict.get(\"url\").split(\"?\")[0]
        except Exception,e:logInfo(\"infoDcit url Error...,%s\"%e)
        if infoDict_url:
            url_order_id = infoDict_url.split(\"/\")[-1]
        if url_order_id in history_1_url or infoDict_url in history_1_url :
             purchase_success = True
    return purchase_success
    "
                :arguments 
                  ( ("driver" variable nil (reparse-symbol function_parameters) [48085 48091])
                    ("infoDict" variable nil (reparse-symbol function_parameters) [48092 48100]))                  )
                nil [48063 51015])
            ("CheckAsinSkuIsExists" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [51128 51163]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51142 51146]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [51129 51251])
                    ("getcheck" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51268 51272]))                          )
                        (reparse-symbol indented_block_body) [51255 51373])
                    ("checkRC" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51389 51393])
                            ("tablename" variable nil (reparse-symbol function_parameters) [51394 51403])
                            ("Asin" variable nil (reparse-symbol function_parameters) [51404 51408])
                            ("skuname" variable nil (reparse-symbol function_parameters) [51417 51424])
                            ("Order_id" variable nil (reparse-symbol function_parameters) [51432 51440])
                            ("url" variable nil (reparse-symbol function_parameters) [51448 51451]))                          )
                        (reparse-symbol indented_block_body) [51377 52100])
                    ("insertRecord" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52138 52142])
                            ("Asin" variable nil (reparse-symbol function_parameters) [52143 52147])
                            ("skuname" variable nil (reparse-symbol function_parameters) [52148 52155])
                            ("url" variable nil (reparse-symbol function_parameters) [52156 52159])
                            ("Order_id" variable nil (reparse-symbol function_parameters) [52160 52168]))                          )
                        (reparse-symbol indented_block_body) [52121 52416])
                    ("closeConn" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52540 52544]))                          )
                        (reparse-symbol indented_block_body) [52526 52586]))                  
                :type "class")
                nil [51095 52586])
            ("getPurchasePrice" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [52609 52615]))              ) nil [52588 54024])
            ("LoopPurchaseEbay" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [54101 54121])
                            ("self" variable nil (reparse-symbol indented_block_body) [54130 54154])
                            ("self" variable nil (reparse-symbol indented_block_body) [54163 54187]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54148 54152])
                            ("infoList" variable nil (reparse-symbol function_parameters) [54153 54161])
                            ("driver" variable nil (reparse-symbol function_parameters) [54162 54168])
                            ("filename" variable nil (reparse-symbol function_parameters) [54169 54177]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [54135 54275])
                    ("loopStart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54302 54306]))                          )
                        (reparse-symbol indented_block_body) [54288 60792]))                  
                :type "class")
                nil [54105 60792])
            ("csvFileList" function nil nil [60809 61052])
            ("main" function nil nil [61070 61912])
            ("if" code nil nil [61913 61951]))          
      :file "autoPurchaseEbay.py"
      :pointmax 61952
      :fsize 63406
      :lastmodtime '(22230 47412 150559 605000)
      :unmatched-syntax nil)
    (semanticdb-table "readFileEbay.py"
      :major-mode 'python-mode
      :tags 
        '( ("writeEbayLog" include nil nil [40 72])
            ("csv" include nil nil [73 83])
            ("os" include nil nil [84 93])
            ("chardet" include nil nil [94 108])
            ("sys" include nil nil [109 119])
            ("time" include nil nil [120 131])
            ("xlrd" include nil nil [132 143])
            ("tkMessageBox" include nil nil [144 163])
            ("typecode" variable nil nil [167 205])
            ("reload" code nil nil [206 217])
            ("sys" code nil nil [218 250])
            ("setCoding" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [266 274]))              ) nil [252 511])
            ("filename" variable nil nil [513 531])
            ("global" code nil nil [532 549])
            ("global" code nil nil [550 576])
            ("csvdata, goodCsvData" code nil nil [577 605])
            ("order_date" variable nil nil [607 662])
            ("server_ip" variable nil nil [664 694])
            ("ebay_user" variable nil nil [695 724])
            ("global" code nil nil [731 743])
            ("iDict" variable nil nil [744 1432])
            ("get_iDict" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [1448 1456]))              ) nil [1434 4895])
            ("rxlrdFile" function (:arguments 
              ( ("xlrdfile" variable nil (reparse-symbol function_parameters) [4910 4918]))              ) nil [4896 7213])
            ("isConvertToInt" function (:arguments 
              ( ("strs" variable nil (reparse-symbol function_parameters) [7232 7236]))              ) nil [7213 7464])
            ("rcsvFile" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [7478 7486]))              ) nil [7465 9891])
            ("writeErrorResult" function (:arguments 
              ( ("allFileName" variable nil (reparse-symbol function_parameters) [9918 9929])
                ("goodFileName" variable nil (reparse-symbol function_parameters) [9930 9942])
                ("timenow" variable nil (reparse-symbol function_parameters) [9943 9950])
                ("errString" variable nil (reparse-symbol function_parameters) [9951 9960]))              ) nil [9897 11594])
            ("writeNotGoodResult" function (:arguments 
              ( ("allFileName" variable nil (reparse-symbol function_parameters) [11627 11638])
                ("infoDict" variable nil (reparse-symbol function_parameters) [11639 11647])
                ("timenow" variable nil (reparse-symbol function_parameters) [11648 11655])
                ("errString" variable nil (reparse-symbol function_parameters) [11656 11665]))              ) nil [11604 13378])
            ("ifInGoodResult" function (:arguments 
              ( ("aline" variable nil (reparse-symbol function_parameters) [13403 13408])
                ("goodFileName" variable nil (reparse-symbol function_parameters) [13409 13421]))              ) nil [13384 13736])
            ("writeCompletedResult" function (:arguments 
              ( ("allFileName" variable nil (reparse-symbol function_parameters) [13763 13774])
                ("completedDict" variable nil (reparse-symbol function_parameters) [13775 13788])
                ("timenow" variable nil (reparse-symbol function_parameters) [13789 13796]))              ) nil [13738 16816])
            ("readConfig" function (:arguments 
              ( ("configFileName" variable nil (reparse-symbol function_parameters) [16832 16846]))              ) nil [16817 17281])
            ("main" function nil nil [17284 17644])
            ("if" code nil nil [17645 17683])
            ("\"\"\"
url
unitPrice
count_n
contact_name_csv
address1
city_csv
province_csv
zip_code_csv
ship_phone_num
read_file_country
\"\"\"" code nil nil [17684 17807]))          
      :file "readFileEbay.py"
      :pointmax 17813
      :fsize 17930
      :lastmodtime '(22230 39282 398600 996000)
      :unmatched-syntax '((NAME 17431 . 17439) (IF 17454 . 17456) (ELSE 17475 . 17479) (NAME 13625 . 13631) (IF 13643 . 13645) (ELSE 13661 . 13665)))
    (semanticdb-table "getUSstate.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [39 49])
            ("\"\"\"
由于有时候，美国州用了简写
而ebay上一直都是用全写，
所以需要一个对应
\"\"\"" code nil nil [51 96])
            ("states_line" variable nil nil [98 1438])
            ("ebay_states" variable nil nil [1532 2178])
            ("Canada_states" variable nil nil [2273 2667])
            ("get_states" function
               (:documentation "get US states  "
                :arguments 
                  ( ("state" variable nil (reparse-symbol function_parameters) [2704 2709]))                  )
                nil [2689 3033])
            ("if" code nil nil [3036 3308]))          
      :file "getUSstate.py"
      :pointmax 3311
      :fsize 3376
      :lastmodtime '(22230 39282 398600 996000)
      :unmatched-syntax nil))
  :file "!home!wood!git!AutoPurchase!AutoPurchase_ebay_firefox!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
