;; Object AutoPurchase_ebay/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "AutoPurchase_ebay/"
  :tables
  (list
    (semanticdb-table "autoPurchaseEbay.py"
      :major-mode 'python-mode
      :tags 
        '( ("selenium" include nil nil [40 70])
            ("selenium.webdriver.common.action_chains" include nil nil [71 135])
            ("getpass" include nil nil [136 155])
            ("time" include nil nil [136 155])
            ("sys" include nil nil [156 178])
            ("os" include nil nil [156 178])
            ("platform" include nil nil [156 178])
            ("string" include nil nil [179 192])
            ("tkMessageBox" include nil nil [194 213])
            ("requests" include nil nil [214 229])
            ("json" include nil nil [230 241])
            ("writeEbayLog" include nil nil [243 275])
            ("getUSstate" include nil nil [308 340])
            ("readFileEbay" include nil nil [377 437])
            ("readFileEbay" include nil nil [439 474])
            ("findColor" include nil nil [475 506])
            ("checkAsinSku" include nil nil [540 577])
            ("typecode" variable nil nil [621 659])
            ("reload" code nil nil [660 671])
            ("sys" code nil nil [672 704])
            ("global" code nil nil [740 787])
            ("userEmail" variable nil nil [788 804])
            ("passWord" variable nil nil [830 846])
            ("server_ip" variable nil nil [868 884])
            ("ebay_user" variable nil nil [885 901])
            ("ebay_pass" variable nil nil [902 918])
            ("configFileName" variable nil nil [920 949])
            ("if" code nil nil [950 1388])
            ("global" code nil nil [1405 1425])
            ("purchasePrice" variable nil nil [1426 1443])
            ("server_ip, server_port" code nil nil [1444 1487])
            ("system_, sysUser" code nil nil [1490 1544])
            ("profilePath" variable nil nil [1545 1561])
            ("if" code nil nil [1562 2286])
            ("if" code nil nil [2302 2362])
            ("if" code nil nil [2363 2468])
            ("profileName, files" code nil nil [2469 2494])
            ("endWith" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [2507 2508])
                ("endstring" variable nil (reparse-symbol function_parameters) [2509 2519]))              ) nil [2495 2618])
            ("if" code nil nil [2620 2873])
            ("messages" variable nil nil [2937 2994])
            ("openBrowser" function (:documentation "首先尝试打开phantomjs,再尝试打开chrome，如果无法打开chrome再打开火狐浏览器 ") nil [2999 3995])
            ("closeBrowser" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4013 4019]))              ) nil [3996 4121])
            ("clickByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4297 4303])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [4305 4316])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [4318 4333]))              ) nil [4282 4619])
            ("clickByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [4714 4720])
                ("xpathName" variable nil (reparse-symbol function_parameters) [4722 4731])
                ("xpathNameNode" variable nil (reparse-symbol function_parameters) [4733 4746]))              ) nil [4697 5017])
            ("inputByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [5111 5117])
                ("xpathName" variable nil (reparse-symbol function_parameters) [5119 5128])
                ("inputText" variable nil (reparse-symbol function_parameters) [5130 5139])
                ("xpathNode" variable nil (reparse-symbol function_parameters) [5141 5150]))              ) nil [5094 5504])
            ("inputByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [5604 5610])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [5611 5622])
                ("inputText" variable nil (reparse-symbol function_parameters) [5623 5632])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [5634 5649]))              ) nil [5589 6039])
            ("findElementByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [6139 6145])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [6146 6157])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [6159 6174]))              ) nil [6118 6521])
            ("fElementsByCss" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [6626 6632])
                ("cssSelector" variable nil (reparse-symbol function_parameters) [6633 6644])
                ("cssSelectorNode" variable nil (reparse-symbol function_parameters) [6646 6661]))              ) nil [6607 7014])
            ("findElementByXpath" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [7120 7126])
                ("xpathName" variable nil (reparse-symbol function_parameters) [7128 7137])
                ("xpathNameNode" variable nil (reparse-symbol function_parameters) [7139 7152]))              ) nil [7097 7470])
            ("findElementById" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [7570 7576])
                ("idSelector" variable nil (reparse-symbol function_parameters) [7577 7587])
                ("idSelectorNode" variable nil (reparse-symbol function_parameters) [7589 7603]))              ) nil [7550 7959])
            ("clickElement" function (:arguments 
              ( ("webElement" variable nil (reparse-symbol function_parameters) [8055 8065]))              ) nil [8038 8336])
            ("getDigit" function (:arguments 
              ( ("strs" variable nil (reparse-symbol function_parameters) [8359 8363]))              ) nil [8346 8666])
            ("clickSelect" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [8684 8690])
                ("select_id" variable nil (reparse-symbol function_parameters) [8691 8700])
                ("infoName" variable nil (reparse-symbol function_parameters) [8701 8709])
                ("infoDict" variable nil (reparse-symbol function_parameters) [8710 8718]))              ) nil [8668 10323])
            ("is_num" function (:arguments 
              ( ("strs" variable nil (reparse-symbol function_parameters) [10357 10361]))              ) nil [10346 10456])
            ("findGoods" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [10551 10557])
                ("infoDict" variable nil (reparse-symbol function_parameters) [10558 10566]))              ) nil [10537 15938])
            ("clickChangeAddress" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [16042 16048])
                ("changeAddress" variable nil (reparse-symbol function_parameters) [16049 16062]))              ) nil [16019 16908])
            ("changeAddress" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [17002 17008])
                ("infoDict" variable nil (reparse-symbol function_parameters) [17009 17017]))              ) nil [16984 27394])
            ("isExistsFrame" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [27491 27497])
                ("frame_id" variable nil (reparse-symbol function_parameters) [27498 27506])
                ("chAddr" variable nil (reparse-symbol function_parameters) [27508 27514]))              ) nil [27473 27831])
            ("\"\"\"
def clickRecaddr(driver):
    clickRecaddr = False
    try:
        driver.switch_to_default_content()
    except Exception,e: logInfo(\"clickRecaddr switch to default Error,%s\"%e)
    try:
        driver.switch_to_frame(0)
        clickRecaddr(driver)
        clickRecaddr = True
    except Exception,e:
        logInfo(\"click Recaddr switch to frame 0 Error,%s\"%e)
    if not clickRecaddr:
        try:
            driver.switch_to_frame(1)
            clickRecaddr(driver)
            clickRecaddr = True
        except Exception,e:
            logInfo(\"click Recaddr switch to frame 1 Error,%s\"%e)
\"\"\"" code nil nil [27831 28439])
            ("clickRecaddr" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [28458 28464]))              ) nil [28441 28705])
            ("continuePay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [28807 28813]))              ) nil [28791 29654])
            ("payOnlyThis" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [29739 29745]))              ) nil [29723 30524])
            ("addMessage" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [30626 30632]))              ) nil [30611 32402])
            ("iframePay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [32495 32501]))              ) nil [32481 35170])
            ("confirmAndPay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [35289 35295]))              ) nil [35271 36078])
            ("selectPay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [36163 36169])
                ("userName" variable nil (reparse-symbol function_parameters) [36170 36178])
                ("passWord" variable nil (reparse-symbol function_parameters) [36179 36187]))              ) nil [36149 41534])
            ("move_to_element" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [41555 41561])
                ("selector" variable nil (reparse-symbol function_parameters) [41563 41571]))              ) nil [41535 41736])
            ("continueAbovefold" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [41816 41822]))              ) nil [41794 42293])
            ("loginEbay" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [42408 42414])
                ("ebay_user" variable nil (reparse-symbol function_parameters) [42415 42424])
                ("ebay_pass" variable nil (reparse-symbol function_parameters) [42425 42434]))              ) nil [42394 44847])
            ("submitLogin" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [44864 44870]))              ) nil [44848 47584])
            ("judgeSuccessError" function
               (:documentation "
    purchaseHistory_url = \"http://www.ebay.com/myb/PurchaseHistory\"
    driver.get(purchaseHistory_url)
    cur_url = driver.current_url
    time_start = time.time()
    while True:
        if cur_url == purchaseHistory_url: break
        time.sleep(3)
        cur_url = driver.current_url
        time_end = time.time()
        if abs(time_end - time_start) > 60: break  #如果一分钟还没有跳转,则继续

    item_div_css = \"div.order-r.my-row-r.item-list-all\"
    
    item_title_css = \"a.vip.item-title\"
    purchase_success = False    
    items,item_title, history_1_url = [],\"\",\"\"
    items = fElementsByCss(driver,item_div_css)
    if items: item_div = items[0]
    if item_div:item_title = findElementByCss(driver,item_title_css,item_div)
    if item_title:
        history_1_url = item_title.get_attribute(\"href\")
        logInfo(\"href: %s\"%history_1_url)
    if history_1_url:
        infoDict_url , url_order_id= \"\",\"\"
        try: infoDict_url = infoDict.get(\"url\").split(\"?\")[0]
        except Exception,e:logInfo(\"infoDcit url Error...,%s\"%e)
        if infoDict_url:
            url_order_id = infoDict_url.split(\"/\")[-1]
        if url_order_id in history_1_url or infoDict_url in history_1_url :
             purchase_success = True
    return purchase_success
    "
                :arguments 
                  ( ("driver" variable nil (reparse-symbol function_parameters) [47608 47614])
                    ("infoDict" variable nil (reparse-symbol function_parameters) [47615 47623]))                  )
                nil [47586 50538])
            ("CheckAsinSkuIsExists" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [50845 50880]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50665 50669]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [50652 50774])
                    ("getcheck" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50791 50795]))                          )
                        (reparse-symbol indented_block_body) [50778 50896])
                    ("checkRC" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50912 50916])
                            ("tablename" variable nil (reparse-symbol function_parameters) [50917 50926])
                            ("Asin" variable nil (reparse-symbol function_parameters) [50927 50931])
                            ("skuname" variable nil (reparse-symbol function_parameters) [50940 50947])
                            ("Order_id" variable nil (reparse-symbol function_parameters) [50955 50963])
                            ("url" variable nil (reparse-symbol function_parameters) [50971 50974]))                          )
                        (reparse-symbol indented_block_body) [50900 51595])
                    ("insertRecord" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51633 51637])
                            ("Asin" variable nil (reparse-symbol function_parameters) [51638 51642])
                            ("skuname" variable nil (reparse-symbol function_parameters) [51643 51650])
                            ("url" variable nil (reparse-symbol function_parameters) [51651 51654])
                            ("Order_id" variable nil (reparse-symbol function_parameters) [51655 51663]))                          )
                        (reparse-symbol indented_block_body) [51616 51911])
                    ("closeConn" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52035 52039]))                          )
                        (reparse-symbol indented_block_body) [52021 52081]))                  
                :type "class")
                nil [50618 52081])
            ("getPurchasePrice" function (:arguments 
              ( ("driver" variable nil (reparse-symbol function_parameters) [52104 52110]))              ) nil [52083 53367])
            ("LoopPurchaseEbay" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [53629 53649])
                            ("self" variable nil (reparse-symbol indented_block_body) [53658 53682]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53491 53495])
                            ("infoList" variable nil (reparse-symbol function_parameters) [53496 53504])
                            ("driver" variable nil (reparse-symbol function_parameters) [53505 53511]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [53478 53576])
                    ("loopStart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53637 53641]))                          )
                        (reparse-symbol indented_block_body) [53623 60908]))                  
                :type "class")
                nil [53448 60908])
            ("csvFileList" function nil nil [60914 61157])
            ("post_result" function (:arguments 
              ( ("resultJson" variable nil (reparse-symbol function_parameters) [61175 61185])
                ("url" variable nil (reparse-symbol function_parameters) [61186 61189]))              ) nil [61159 61422])
            ("getInfo_from_server_main" function nil nil [61489 62260])
            ("if" code nil nil [62265 62323]))          
      :file "autoPurchaseEbay.py"
      :pointmax 62323
      :fsize 63748
      :lastmodtime '(22221 22347 273427 827000)
      :unmatched-syntax nil)
    (semanticdb-table "readFileEbay.py"
      :major-mode 'python-mode
      :tags 
        '( ("writeEbayLog" include nil nil [40 72])
            ("csv" include nil nil [73 83])
            ("os" include nil nil [84 93])
            ("chardet" include nil nil [94 108])
            ("sys" include nil nil [109 119])
            ("time" include nil nil [120 131])
            ("xlrd" include nil nil [132 143])
            ("typecode" variable nil nil [147 185])
            ("reload" code nil nil [186 197])
            ("sys" code nil nil [198 230])
            ("setCoding" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [246 254]))              ) nil [232 491])
            ("filename" variable nil nil [493 511])
            ("global" code nil nil [512 529])
            ("global" code nil nil [530 556])
            ("csvdata, goodCsvData" code nil nil [557 585])
            ("order_date" variable nil nil [587 642])
            ("server_ip" variable nil nil [644 674])
            ("ebay_user" variable nil nil [675 704])
            ("global" code nil nil [711 723])
            ("iDict" variable nil nil [724 1412])
            ("infoDict_list" function (:arguments 
              ( ("infoDict" variable nil (reparse-symbol function_parameters) [1433 1441])
                ("good" variable nil (reparse-symbol function_parameters) [1442 1446]))              ) nil [1415 2569])
            ("writeNotGoodJson" function (:arguments 
              ( ("infoDict" variable nil (reparse-symbol function_parameters) [2596 2604])
                ("timenow" variable nil (reparse-symbol function_parameters) [2605 2612]))              ) nil [2575 3342])
            ("writeCompletedJson" function (:arguments 
              ( ("infoDict" variable nil (reparse-symbol function_parameters) [3366 3374])
                ("completedDict" variable nil (reparse-symbol function_parameters) [3375 3388])
                ("timenow" variable nil (reparse-symbol function_parameters) [3389 3396]))              ) nil [3343 4434])
            ("readConfig" function (:arguments 
              ( ("configFileName" variable nil (reparse-symbol function_parameters) [4457 4471]))              ) nil [4442 4906])
            ("main" function nil nil [4908 5008])
            ("if" code nil nil [5010 5048]))          
      :file "readFileEbay.py"
      :pointmax 5054
      :fsize 5073
      :lastmodtime '(22221 21300 193433 158000)
      :unmatched-syntax nil)
    (semanticdb-table "writeEbayLog.py"
      :file "writeEbayLog.py"
      :fsize 810
      :lastmodtime '(22191 13015 250372 0))
    (semanticdb-table "getUSstate.py"
      :file "getUSstate.py"
      :fsize 2556
      :lastmodtime '(22191 13015 250372 0))
    (semanticdb-table "findColor.py"
      :file "findColor.py"
      :fsize 1253
      :lastmodtime '(22191 13015 250372 0))
    (semanticdb-table "checkAsinSku.py"
      :file "checkAsinSku.py"
      :fsize 5087
      :lastmodtime '(22209 18782 943419 0)))
  :file "!home!wood!git!AutoPurchase!autoEbay!python_auto!AutoPurchase_ebay!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
