;; Object Handle-Image/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Handle-Image/"
  :tables
  (list
    (semanticdb-table "handleImage.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [41 50])
            ("requests" include nil nil [51 66])
            ("time" include nil nil [67 78])
            ("mergeimage" include nil nil [80 114])
            ("S3" include nil nil [115 132])
            ("DownImageDir" variable nil nil [135 164])
            ("mergeDir" variable nil nil [183 204])
            ("PictureFrame" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("pass" code nil (reparse-symbol indented_block_body) [284 288]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [269 273]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [256 289])
                    ("getImageFromUrl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [314 318])
                            ("image_url" variable nil (reparse-symbol function_parameters) [320 329])
                            ("category_id" variable nil (reparse-symbol function_parameters) [331 342])
                            ("n" variable nil (reparse-symbol function_parameters) [344 345]))                          
                        :documentation "从img_url保存图片到本地")
                        (reparse-symbol indented_block_body) [294 1017])
                    ("merge_thumbImg" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1041 1045])
                            ("local_image_name" variable nil (reparse-symbol function_parameters) [1047 1063])
                            ("output_file_name" variable nil (reparse-symbol function_parameters) [1065 1081]))                          
                        :documentation "图片白底,1000*1000处理")
                        (reparse-symbol indented_block_body) [1022 1455])
                    ("upload_one_file" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1480 1484])
                            ("img_url" variable nil (reparse-symbol function_parameters) [1486 1493]))                          
                        :documentation "转换一个url图片 ")
                        (reparse-symbol indented_block_body) [1460 1707])
                    ("upload_img_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1732 1736])
                            ("img_url_list" variable nil (reparse-symbol function_parameters) [1738 1750]))                          
                        :documentation "转换一个图片url列表")
                        (reparse-symbol indented_block_body) [1712 2711]))                  
                :type "class")
                nil [229 2711])
            ("test" function nil nil [2713 3253])
            ("if" code nil nil [3255 6525]))          
      :file "handleImage.py"
      :pointmax 6525
      :fsize 6610
      :lastmodtime '(22304 51530 910792 980000)
      :unmatched-syntax nil)
    (semanticdb-table "start.py"
      :major-mode 'python-mode
      :tags 
        '( ("sqlite3" include nil nil [78 92])
            ("sys" include nil nil [93 103])
            ("filename" variable nil nil [105 135])
            ("writefilename" variable nil nil [136 179])
            ("all_image_list" variable nil nil [181 200])
            ("replace_image_dict" variable nil nil [201 224])
            ("global" code nil nil [247 255])
            ("m" variable nil nil [256 261])
            ("loopStart" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [277 285])
                ("SqlQ" variable nil (reparse-symbol function_parameters) [287 291]))              ) nil [263 752])
            ("replace_imageurl" function (:arguments 
              ( ("img_lists" variable nil (reparse-symbol function_parameters) [800 809])
                ("SqlQ" variable nil (reparse-symbol function_parameters) [811 815]))              ) nil [779 1131])
            ("writeinfo" function (:arguments 
              ( ("line" variable nil (reparse-symbol function_parameters) [1147 1151]))              ) nil [1133 1280])
            ("SqlQ" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1337 1370])
                            ("pass" code nil (reparse-symbol indented_block_body) [1379 1383]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1322 1326]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1309 1384])
                    ("connectSqlite3" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1407 1411]))                          )
                        (reparse-symbol indented_block_body) [1388 1475])
                    ("queryurl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1494 1498])
                            ("source_url" variable nil (reparse-symbol function_parameters) [1500 1510]))                          )
                        (reparse-symbol indented_block_body) [1481 1919]))                  
                :type "class")
                nil [1291 1919])
            ("main" function nil nil [1928 2015])
            ("if" code nil nil [2016 2054]))          
      :file "start.py"
      :pointmax 2063
      :fsize 2062
      :lastmodtime '(22304 34391 279421 137000)
      :unmatched-syntax nil)
    (semanticdb-table "S3.py"
      :major-mode 'python-mode
      :tags 
        '( ("boto" include nil nil [41 52])
            ("hashlib" include nil nil [53 67])
            ("os" include nil nil [68 77])
            ("hashlib" include nil nil [78 92])
            ("math" include nil nil [93 104])
            ("filechunkio" include nil nil [106 141])
            ("S3" type
               (:documentation "
    用来保存文件到S3的类
    "
                :members 
                  ( ("access_key" variable nil (reparse-symbol indented_block_body) [214 249])
                    ("secret_key" variable nil (reparse-symbol indented_block_body) [254 309])
                    ("bucket_name" variable nil (reparse-symbol indented_block_body) [314 349])
                    ("image_bucket_name" variable nil (reparse-symbol indented_block_body) [354 394])
                    ("file_size" code nil (reparse-symbol indented_block_body) [416 444])
                    ("connect" variable nil (reparse-symbol indented_block_body) [449 463])
                    ("bucket" variable nil (reparse-symbol indented_block_body) [468 481])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [567 679])
                            ("if" code nil (reparse-symbol indented_block_body) [688 747])
                            ("self" variable nil (reparse-symbol indented_block_body) [756 820])
                            ("bucket_have" variable nil (reparse-symbol indented_block_body) [829 880])
                            ("if" code nil (reparse-symbol indented_block_body) [889 970])
                            ("self" variable nil (reparse-symbol indented_block_body) [979 1049]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [500 504])
                            ("access_key" variable nil (reparse-symbol function_parameters) [506 516])
                            ("secret_key" variable nil (reparse-symbol function_parameters) [523 533])
                            ("bucket_name" variable nil (reparse-symbol function_parameters) [540 551]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [487 1050])
                    ("upload_image_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1077 1081])
                            ("image_list" variable nil (reparse-symbol function_parameters) [1083 1093])
                            ("policy" variable nil (reparse-symbol function_parameters) [1095 1101]))                          
                        :documentation "
        :param file_name:文件名列表
        :param policy: 文件访问权限
        :return:返回文件名的上传状态
        ")
                        (reparse-symbol indented_block_body) [1055 2294])
                    ("upload_file_no_split" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2325 2329])
                            ("file_name_list" variable nil (reparse-symbol function_parameters) [2331 2345])
                            ("policy" variable nil (reparse-symbol function_parameters) [2347 2353]))                          
                        :documentation "
        :param file_name:文件名列表
        :param policy: 文件访问权限
        :return:返回文件名的上传状态
        ")
                        (reparse-symbol indented_block_body) [2300 3231])
                    ("upload_file" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3557 3561])
                            ("file_name" variable nil (reparse-symbol function_parameters) [3563 3572]))                          
                        :documentation "
        :param file_name:需要上传的文件
        :return:返回结果
        ")
                        (reparse-symbol indented_block_body) [3541 4557])
                    ("upload_files" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4579 4583])
                            ("files" variable nil (reparse-symbol function_parameters) [4585 4590]))                          )
                        (reparse-symbol indented_block_body) [4562 4907])
                    ("delete_keys" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4928 4932])
                            ("keys" variable nil (reparse-symbol function_parameters) [4934 4938]))                          )
                        (reparse-symbol indented_block_body) [4912 5101]))                  
                :type "class")
                nil [165 5101])
            ("if" code nil nil [5103 5144]))          
      :file "S3.py"
      :pointmax 5144
      :fsize 5303
      :lastmodtime '(22304 49526 622866 436000)
      :unmatched-syntax nil)
    (semanticdb-table "get_img_url.py"
      :major-mode 'python-mode
      :tags 
        '( ("handleImage" include nil nil [40 76])
            ("filename" variable nil nil [78 108])
            ("writeImgfilename" variable nil nil [109 141])
            ("writefilename" variable nil nil [142 185])
            ("all_image_list" variable nil nil [187 206])
            ("replace_image_dict" variable nil nil [207 230])
            ("pf" variable nil nil [232 251])
            ("loopStart" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [267 275]))              ) nil [253 723])
            ("writeImg" function (:arguments 
              ( ("line" variable nil (reparse-symbol function_parameters) [750 754]))              ) nil [737 861])
            ("writeinfo" function (:arguments 
              ( ("line" variable nil (reparse-symbol function_parameters) [889 893]))              ) nil [875 963])
            ("main" function nil nil [976 1039])
            ("if" code nil nil [1040 1078]))          
      :file "get_img_url.py"
      :pointmax 1087
      :fsize 1086
      :lastmodtime '(22305 29875 933184 766000)
      :unmatched-syntax '((INDENT_BLOCK 891 . 995) (NEWLINE 890 . 891) (COLON 889 . 890) (PAREN_BLOCK 883 . 889) (DEF 871 . 874)))
    (semanticdb-table "main_url.py"
      :major-mode 'python-mode
      :tags 
        '( ("sqlite3" include nil nil [41 55])
            ("os" include nil nil [56 65])
            ("time" include nil nil [66 77])
            ("handleImage" include nil nil [78 114])
            ("sys" include nil nil [115 125])
            ("if" code nil nil [127 216])
            ("allcount" variable nil nil [233 245])
            ("SqlQ" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [269 302])
                            ("pass" code nil (reparse-symbol indented_block_body) [311 315]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [282 286]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [269 344])
                    ("connectSqlite3" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [367 371]))                          )
                        (reparse-symbol indented_block_body) [348 435])
                    ("createIndexSource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [462 466]))                          )
                        (reparse-symbol indented_block_body) [440 684])
                    ("createtab" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [707 711]))                          )
                        (reparse-symbol indented_block_body) [693 1011])
                    ("inserturl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1034 1038]))                          )
                        (reparse-symbol indented_block_body) [1020 1348])
                    ("queryurl" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1366 1370])
                            ("source_url" variable nil (reparse-symbol function_parameters) [1372 1382]))                          )
                        (reparse-symbol indented_block_body) [1353 1728]))                  
                :type "class")
                nil [251 1728])
            ("loopStart" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1766 1782])
                            ("self" variable nil (reparse-symbol indented_block_body) [1791 1803]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1769 1773])
                            ("sqlQ" variable nil (reparse-symbol function_parameters) [1775 1779])
                            ("pf" variable nil (reparse-symbol function_parameters) [1781 1783]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1756 1832])
                    ("main" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1846 1850]))                          )
                        (reparse-symbol indented_block_body) [1837 3234])
                    ("deal_img_all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3280 3284])
                            ("img_lists" variable nil (reparse-symbol function_parameters) [3285 3294])
                            ("category_id" variable nil (reparse-symbol function_parameters) [3296 3307])
                            ("tmp_list" variable nil (reparse-symbol function_parameters) [3309 3317]))                          )
                        (reparse-symbol indented_block_body) [3263 3711])
                    ("upload_img" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3753 3757])
                            ("tmp_list" variable nil (reparse-symbol function_parameters) [3758 3766]))                          )
                        (reparse-symbol indented_block_body) [3738 3842])
                    ("insert2db" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3861 3865])
                            ("result" variable nil (reparse-symbol function_parameters) [3866 3872]))                          )
                        (reparse-symbol indented_block_body) [3847 4148]))                  
                :type "class")
                nil [1733 4148])
            ("main" function nil nil [4158 4293])
            ("if" code nil nil [4295 4333]))          
      :file "main_url.py"
      :pointmax 4333
      :fsize 4332
      :lastmodtime '(22305 28825 173223 276000)
      :unmatched-syntax nil)
    (semanticdb-table "mergeimage.py"
      :major-mode 'python-mode
      :tags 
        '( ("PIL" include nil nil [38 59])
            ("resize" function (:arguments 
              ( ("w" variable nil (reparse-symbol function_parameters) [72 73])
                ("h" variable nil (reparse-symbol function_parameters) [75 76])
                ("w_box" variable nil (reparse-symbol function_parameters) [78 83])
                ("h_box" variable nil (reparse-symbol function_parameters) [85 90])
                ("pil_image" variable nil (reparse-symbol function_parameters) [92 101]))              ) nil [61 455])
            ("merge_jpg" function (:arguments 
              ( ("file_name_list" variable nil (reparse-symbol function_parameters) [471 485])
                ("output_file_name" variable nil (reparse-symbol function_parameters) [487 503])
                ("backgroud_color" variable nil (reparse-symbol function_parameters) [512 527]))              ) nil [457 1486])
            ("merge_thumb" function
               (:documentation "
    :param file_name_list:需要合并的图片的路径列表
    :param output_file_name:合并后的图片名称
    :param backgroud_color:
    :return:合并后的图片的路径
    "
                :arguments 
                  ( ("file_name_list" variable nil (reparse-symbol function_parameters) [1505 1519])
                    ("output_file_name" variable nil (reparse-symbol function_parameters) [1521 1537])
                    ("backgroud_color" variable nil (reparse-symbol function_parameters) [1546 1561]))                  )
                nil [1489 3118])
            ("get_image_backgroud" function
               (:documentation "
    :param file_name:需要添加背景的图片路径
    :param backgroud_color: 需要添加的背景的颜色
    :return:返回新的图片的路径
    "
                :arguments 
                  ( ("file_name" variable nil (reparse-symbol function_parameters) [3144 3153])
                    ("new_files_name" variable nil (reparse-symbol function_parameters) [3155 3169])
                    ("backgroud_color" variable nil (reparse-symbol function_parameters) [3178 3193]))                  )
                nil [3120 3652])
            ("set_image_black" function
               (:documentation "
    :param image_url:需要抓取的页面url
    :param image_name: 保存的图片的名称
    :return:返回保存的图片路径
    "
                :arguments 
                  ( ("image_url" variable nil (reparse-symbol function_parameters) [3673 3682])
                    ("image_name" variable nil (reparse-symbol function_parameters) [3684 3694]))                  )
                nil [3653 4089])
            ("if" code nil nil [4090 5268]))          
      :file "mergeimage.py"
      :pointmax 5268
      :fsize 5599
      :lastmodtime '(22304 49575 930864 628000)
      :unmatched-syntax nil))
  :file "!home!wood!python!Handle-Image!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
