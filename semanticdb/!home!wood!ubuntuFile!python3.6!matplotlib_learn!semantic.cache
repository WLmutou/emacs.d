;; Object matplotlib_learn/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "matplotlib_learn/"
  :tables
  (list
    (semanticdb-table "ananite.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [42 60])
            ("matplotlib.pyplot" include nil nil [61 92])
            ("matplotlib.animation" include nil nil [93 139])
            ("fig, ax" code nil nil [141 165])
            ("xdata, ydata" code nil nil [166 187])
            ("ln" variable nil nil [188 231])
            ("init" function nil nil [233 311])
            ("update" function (:arguments 
              ( ("frame" variable nil (reparse-symbol function_parameters) [323 328]))              ) nil [312 432])
            ("ani" variable nil nil [433 549])
            ("plt" code nil nil [550 560]))          
      :file "ananite.py"
      :pointmax 561
      :fsize 560
      :lastmodtime '(22910 28572 321076 279000)
      :unmatched-syntax nil)
    (semanticdb-table "strip_chart_demo.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
============
Oscilloscope
============

Emulates an oscilloscope.
\"\"\"" code nil nil [42 115])
            ("numpy" include nil nil [116 134])
            ("matplotlib.lines" include nil nil [135 170])
            ("matplotlib.pyplot" include nil nil [171 202])
            ("matplotlib.animation" include nil nil [203 243])
            ("Scope" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [320 332])
                            ("self" variable nil (reparse-symbol indented_block_body) [341 353])
                            ("self" variable nil (reparse-symbol indented_block_body) [362 378])
                            ("self" variable nil (reparse-symbol indented_block_body) [387 403])
                            ("self" variable nil (reparse-symbol indented_block_body) [412 428])
                            ("self" variable nil (reparse-symbol indented_block_body) [437 479])
                            ("self" code nil (reparse-symbol indented_block_body) [488 515])
                            ("self" code nil (reparse-symbol indented_block_body) [524 550])
                            ("self" code nil (reparse-symbol indented_block_body) [559 589]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [284 288])
                            ("ax" variable nil (reparse-symbol function_parameters) [290 292])
                            ("maxt" variable nil (reparse-symbol function_parameters) [294 298])
                            ("dt" variable nil (reparse-symbol function_parameters) [302 304]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [271 590])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [606 610])
                            ("y" variable nil (reparse-symbol function_parameters) [612 613]))                          )
                        (reparse-symbol indented_block_body) [595 1082]))                  
                :type "class")
                nil [246 1082])
            ("emitter" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [1096 1097]))              ) nil [1084 1295])
            ("fig, ax" code nil nil [1296 1320])
            ("scope" variable nil nil [1321 1338])
            ("ani" variable nil nil [1408 1519])
            ("plt" code nil nil [1522 1532]))          
      :file "strip_chart_demo.py"
      :pointmax 1533
      :fsize 1532
      :lastmodtime '(22910 28721 593079 828000)
      :unmatched-syntax nil)
    (semanticdb-table "simple_3danim.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
============
3D animation
============

A simple example of an animated plot... In 3D!
\"\"\"" code nil nil [41 135])
            ("numpy" include nil nil [136 154])
            ("matplotlib.pyplot" include nil nil [155 186])
            ("mpl_toolkits.mplot3d.axes3d" include nil nil [187 227])
            ("matplotlib.animation" include nil nil [228 268])
            ("Gen_RandLine" function
               (:documentation "
    Create a line using a random walk algorithm

    length is the number of points for the line.
    dims is the number of dimensions the line has.
    "
                :arguments 
                  ( ("length" variable nil (reparse-symbol function_parameters) [288 294])
                    ("dims" variable nil (reparse-symbol function_parameters) [296 300]))                  )
                nil [271 928])
            ("update_lines" function (:arguments 
              ( ("num" variable nil (reparse-symbol function_parameters) [947 950])
                ("dataLines" variable nil (reparse-symbol function_parameters) [952 961])
                ("lines" variable nil (reparse-symbol function_parameters) [963 968]))              ) nil [930 1176])
            ("fig" variable nil nil [1211 1229])
            ("ax" variable nil nil [1230 1249])
            ("data" variable nil nil [1285 1336])
            ("lines" variable nil nil [1427 1502])
            ("ax" code nil nil [1534 1559])
            ("ax" code nil nil [1560 1578])
            ("ax" code nil nil [1580 1605])
            ("ax" code nil nil [1606 1624])
            ("ax" code nil nil [1626 1651])
            ("ax" code nil nil [1652 1670])
            ("ax" code nil nil [1672 1695])
            ("line_ani" variable nil nil [1729 1867])
            ("plt" code nil nil [1869 1879]))          
      :file "simple_3danim.py"
      :pointmax 1880
      :fsize 1879
      :lastmodtime '(22910 28781 341081 248000)
      :unmatched-syntax nil))
  :file "!home!wood!ubuntuFile!python3.6!matplotlib_learn!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
